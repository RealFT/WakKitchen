fileFormatVersion: 2
guid: d63b0a9d883fa434c8faa505f675d91b
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    OrderManager_1 = require(\"./OrderManager\");\r\nclass CookSlot extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.products
    = []; // list of products stored in the inventory.\r\n        this.platedProducts
    = []; // an array of the indexes for plated Products\r\n    }\r\n    Start()
    {\r\n        this.init();\r\n    }\r\n    OnEnable() {\r\n        this.GetProductsData();\r\n       
    this.UpdateProductDisplay();\r\n    }\r\n    OnDisable() {\r\n    }\r\n    init()
    {\r\n        // Initialize variables\r\n        this.plateIndex = 0;\r\n       
    this.plateLimit = this.plateImages.length;\r\n        this.InitPlate();\r\n       
    // Initialize button listeners\r\n        this.serveButton.onClick.AddListener(()
    => {\r\n            this.Serve();\r\n        });\r\n        this.treshButton.onClick.AddListener(()
    => {\r\n            this.RemovePlatedProducts();\r\n            this.GetProductsData();\r\n           
    this.UpdateProductDisplay();\r\n            this.InitPlate();\r\n        });\r\n       
    // Initialize product slots\r\n        for (var index = 0; index < this.productSlots.length;
    index++) {\r\n            this.SetupProductButton(index);\r\n        }\r\n       
    // Get Products Data\r\n        this.GetProductsData();\r\n        // Update
    Products display\r\n        this.UpdateProductDisplay();\r\n    }\r\n    // Initialize
    product slot\r\n    SetupProductButton(index) {\r\n        this.productSlots[index].onClick.AddListener(()
    => {\r\n            if (this.productCounts[index] == 0)\r\n                return;\r\n           
    // Add the clicked product to the plate\r\n            if (this.plateLimit >
    this.plateIndex) {\r\n                this.platedProducts.push(this.products[index]);\r\n               
    // replace plate''s sprite to this sprite\r\n                this.plateImages[this.plateIndex].sprite
    = this.productSlots[index].image.sprite;\r\n                this.plateImages[this.plateIndex].enabled
    = true;\r\n                this.plateIndex++;\r\n                this.ReduceProductCount(index);\r\n           
    }\r\n            //this.UpdateProductDisplay();\r\n        });\r\n    }\r\n   
    // Set the display of the product inventory when enabled\r\n    GetProductsData()
    {\r\n        // Gets the list of items stored in the inventory.\r\n        this.products
    = OrderManager_1.default.GetInstance().GetProductsFromInventory();\r\n       
    // Update the productSlots, Counts for each item\r\n        for (let i = 0; i
    < this.products.length; i++) {\r\n            // const product = this.products[i];\r\n           
    this.productCounts[i] = OrderManager_1.default.GetInstance().GetQuantityFromInventory(this.products[i]);\r\n       
    }\r\n    }\r\n    // Update the display of the product inventory\r\n    UpdateProductDisplay()
    {\r\n        for (let i = 0; i < this.productSlots.length; i++) {\r\n           
    if (i < this.products.length) {\r\n                const product = this.products[i];\r\n               
    this.productSlots[i].image.sprite = OrderManager_1.default.GetInstance().getProductSprite(product);\r\n               
    this.productCountTexts[i].text = this.productCounts[i].toString();\r\n               
    this.SetSlot(i, true);\r\n            }\r\n            // If the inventory has
    no more of the current product, disable the corresponding button\r\n           
    else {\r\n                this.SetSlot(i, false);\r\n            }\r\n       
    }\r\n    }\r\n    Serve() {\r\n        // If the served food matches the order\r\n       
    if (OrderManager_1.default.GetInstance().checkOrder(this.platedProducts)) {\r\n           
    this.RemovePlatedProducts();\r\n        }\r\n        this.GetProductsData();\r\n       
    this.UpdateProductDisplay();\r\n        this.InitPlate();\r\n    }\r\n    //
    Remove food\r\n    RemovePlatedProducts() {\r\n        for (var product of this.platedProducts)
    {\r\n            OrderManager_1.default.GetInstance().RemoveItemFromInventory(product);\r\n       
    }\r\n    }\r\n    InitPlate() {\r\n        for (var images of this.plateImages)
    {\r\n            images.enabled = false;\r\n        }\r\n        this.plateIndex
    = 0;\r\n        this.platedProducts = [];\r\n    }\r\n    SetSlot(index, value)
    {\r\n        this.productSlots[index].image.enabled = value;\r\n        this.productCountTexts[index].enabled
    = value;\r\n    }\r\n    ReduceProductCount(index) {\r\n        this.productCounts[index]--;\r\n       
    this.productCountTexts[index].text = this.productCounts[index].toString();\r\n       
    // if this product doesn''t exist anymore\r\n        if (this.productCounts[index]
    <= 0) {\r\n            this.SetSlot(index, false);\r\n        }\r\n    }\r\n}\r\nexports.default
    = CookSlot;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29vay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNvb2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBcUQ7QUFHckQsaURBQTBDO0FBRzFDLE1BQXFCLFFBQVMsU0FBUSxxQ0FBcUI7SUFBM0Q7O1FBVVksYUFBUSxHQUFhLEVBQUUsQ0FBQyxDQUFDLDRDQUE0QztRQU1yRSxtQkFBYyxHQUFhLEVBQUUsQ0FBQyxDQUFDLDhDQUE4QztJQTJIekYsQ0FBQztJQXpIRyxLQUFLO1FBQ0QsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFTyxRQUFRO1FBQ1osSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFFTyxTQUFTO0lBQ2pCLENBQUM7SUFFRCxJQUFJO1FBQ0EsdUJBQXVCO1FBQ3ZCLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUM7UUFDMUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBRWpCLDhCQUE4QjtRQUM5QixJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFO1lBQ3RDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNqQixDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxHQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUM7WUFDNUIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1lBQzVCLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNyQixDQUFDLENBQUMsQ0FBQztRQUNILDJCQUEyQjtRQUMzQixLQUFLLElBQUksS0FB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","assetPath":"Assets/Scripts/Cook.ts","manifest":{"properties":[{"assembly":"UnityEngine.UI","name":"serveButton","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.UI","name":"treshButton","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.UI","name":"productSlots","type":"UnityEngine.UI.Button[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.UI","name":"productCountTexts","type":"UnityEngine.UI.Text[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"productCounts","type":"System.Single[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.UI","name":"plateImages","type":"UnityEngine.UI.Image[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"plateIndex","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"plateLimit","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"CookSlot","description":""},"isCompiled":true}'
  typescriptHash: 7218501aae20f830a54ee363795863d3
  onlyWriteTrigger: 0
