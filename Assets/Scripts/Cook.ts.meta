fileFormatVersion: 2
guid: d63b0a9d883fa434c8faa505f675d91b
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    OrderManager_1 = require(\"./OrderManager\");\r\nconst Mediator_1 = require(\"./Notification/Mediator\");\r\nconst
    DataManager_1 = require(\"./DataManager\");\r\nclass CookSlot extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super(...arguments);\r\n        //@SerializeField()
    private productCountTexts: Text[] = [];\r\n        this.productCountTexts = [];\r\n       
    this.productCounts = []; // number of products stored in the inventory.\r\n       
    this.products = []; // list of products stored in the inventory.\r\n        this.platedProducts
    = []; // an array of the indexes for plated Products\r\n    }\r\n    Start()
    {\r\n        this.init();\r\n        Mediator_1.default.GetInstance().RegisterListener(this);\r\n   
    }\r\n    OnDestroy() {\r\n        Mediator_1.default.GetInstance().UnregisterListener(this);\r\n   
    }\r\n    init() {\r\n        // Initialize variables\r\n        this.plateIndex
    = 0;\r\n        this.plateLimit = this.plateImages.length;\r\n        this.InitPlate();\r\n       
    // Initialize button listeners\r\n        this.serveButton.onClick.AddListener(()
    => {\r\n            this.Serve();\r\n        });\r\n        this.treshButton.onClick.AddListener(()
    => {\r\n            this.RemovePlatedProducts();\r\n            this.GetProductsData();\r\n           
    this.UpdateProductDisplay();\r\n            this.InitPlate();\r\n        });\r\n       
    // Initialize product slots\r\n        for (var index = 0; index < this.productSlots.length;
    index++) {\r\n            this.SetupProductButton(index);\r\n        }\r\n       
    // Get Products Data\r\n        this.GetProductsData();\r\n        // Update
    Products display\r\n        this.UpdateProductDisplay();\r\n    }\r\n    // Initialize
    product slot\r\n    SetupProductButton(index) {\r\n        this.productSlots[index].onClick.AddListener(()
    => {\r\n            if (this.productCounts[index] == 0)\r\n                return;\r\n           
    // Add the clicked product to the plate\r\n            // If the product is Burger
    ingredient\r\n            if (this.products[index] <= DataManager_1.Ingredient.END
    && this.plateLimit > this.plateIndex) {\r\n                // replace plate''s
    sprite to this sprite\r\n                this.plateImages[this.plateIndex].sprite
    = this.productSlots[index].image.sprite;\r\n                this.plateImages[this.plateIndex].enabled
    = true;\r\n                this.plateIndex++;\r\n            }\r\n           
    // If the product is Drink\r\n            else if (this.products[index] >= DataManager_1.Drink.START
    &&\r\n                this.products[index] <= DataManager_1.Drink.END && this.plateDrinkImage.enabled
    != true) {\r\n                this.plateDrinkImage.sprite = this.productSlots[index].image.sprite;\r\n               
    this.plateDrinkImage.enabled = true;\r\n            }\r\n            // If the
    product is Side\r\n            else if (this.products[index] >= DataManager_1.Side.START
    &&\r\n                this.products[index] <= DataManager_1.Side.END && this.plateSideImage.enabled
    != true) {\r\n                this.plateSideImage.sprite = this.productSlots[index].image.sprite;\r\n               
    this.plateSideImage.enabled = true;\r\n            }\r\n            else\r\n               
    return;\r\n            this.platedProducts.push(this.products[index]);\r\n           
    this.ReduceProductCount(index);\r\n            //this.UpdateProductDisplay();\r\n       
    });\r\n    }\r\n    // Set the display of the product inventory when enabled\r\n   
    GetProductsData() {\r\n        // Gets the list of items stored in the inventory.\r\n       
    this.products = OrderManager_1.default.GetInstance().GetProductsFromInventory();\r\n       
    if (!this.products)\r\n            return;\r\n        // Update the productSlots,
    Counts for each item\r\n        for (let i = 0; i < this.products.length; i++)
    {\r\n            // const product = this.products[i];\r\n            this.productCounts[i]
    = OrderManager_1.default.GetInstance().GetQuantityFromInventory(this.products[i]);\r\n       
    }\r\n    }\r\n    // Update the display of the product inventory\r\n    UpdateProductDisplay()
    {\r\n        for (let i = 0; i < this.productSlots.length; i++) {\r\n           
    if (i < this.products.length) {\r\n                const product = this.products[i];\r\n               
    this.productSlots[i].image.sprite = DataManager_1.default.GetInstance().getProductSprite(product);\r\n               
    this.productCountTexts[i].text = this.productCounts[i].toString();\r\n               
    this.SetSlot(i, true);\r\n            }\r\n            // If the inventory has
    no more of the current product, disable the corresponding button\r\n           
    else {\r\n                this.SetSlot(i, false);\r\n            }\r\n       
    }\r\n    }\r\n    Serve() {\r\n        // If the served food matches the order\r\n       
    if (OrderManager_1.default.GetInstance().checkOrder(this.platedProducts)) {\r\n           
    this.RemovePlatedProducts();\r\n        }\r\n        this.GetProductsData();\r\n       
    this.UpdateProductDisplay();\r\n        this.InitPlate();\r\n    }\r\n    //
    Remove food\r\n    RemovePlatedProducts() {\r\n        for (var product of this.platedProducts)
    {\r\n            OrderManager_1.default.GetInstance().RemoveItemFromInventory(product);\r\n       
    }\r\n    }\r\n    InitPlate() {\r\n        // disable plate images\r\n       
    this.plateSideImage.enabled = false;\r\n        this.plateDrinkImage.enabled
    = false;\r\n        for (var images of this.plateImages) {\r\n            images.enabled
    = false;\r\n        }\r\n        // init plate Index\r\n        this.plateIndex
    = 0;\r\n        // init plated Products\r\n        this.platedProducts = [];\r\n   
    }\r\n    SetSlot(index, value) {\r\n        this.productSlots[index].image.enabled
    = value;\r\n        this.productCountTexts[index].enabled = value;\r\n    }\r\n   
    ReduceProductCount(index) {\r\n        this.productCounts[index]--;\r\n       
    this.productCountTexts[index].text = this.productCounts[index].toString();\r\n       
    // if this product doesn''t exist anymore\r\n        if (this.productCounts[index]
    <= 0) {\r\n            this.SetSlot(index, false);\r\n        }\r\n    }\r\n   
    OnEnable() {\r\n        this.GetProductsData();\r\n        this.UpdateProductDisplay();\r\n   
    }\r\n    OnNotify(sender, eventName, eventData) {\r\n        if (eventName ==
    Mediator_1.EventNames.IngredientCountUpdated) {\r\n            this.GetProductsData();\r\n           
    this.UpdateProductDisplay();\r\n        }\r\n        if (eventName == Mediator_1.EventNames.StageEnded)
    {\r\n            this.Reset();\r\n        }\r\n    }\r\n    Reset() {\r\n       
    this.InitPlate();\r\n        this.GetProductsData();\r\n        this.UpdateProductDisplay();\r\n   
    }\r\n}\r\nexports.default = CookSlot;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29vay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNvb2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBcUQ7QUFHckQsaURBQTBDO0FBQzFDLHNEQUEwRTtBQUMxRSwrQ0FBcUU7QUFHckUsTUFBcUIsUUFBUyxTQUFRLHFDQUFxQjtJQUEzRDs7UUFRSSwyREFBMkQ7UUFDakMsc0JBQWlCLEdBQXNCLEVBQUUsQ0FBQztRQUM1RCxrQkFBYSxHQUFhLEVBQUUsQ0FBQyxDQUFHLDhDQUE4QztRQUM5RSxhQUFRLEdBQWEsRUFBRSxDQUFDLENBQUMsNENBQTRDO1FBUXJFLG1CQUFjLEdBQWEsRUFBRSxDQUFDLENBQUMsOENBQThDO0lBZ0t6RixDQUFDO0lBOUpHLEtBQUs7UUFDRCxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDWixrQkFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFDTyxTQUFTO1FBQ2Isa0JBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBQ0QsSUFBSTtRQUNBLHVCQUF1QjtRQUN2QixJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDO1FBQzFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUVqQiw4QkFBOEI7UUFDOUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRTtZQUN0QyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDakIsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRSxFQUFFO1lBQ3JDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1lBQzVCLElB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","assetPath":"Assets/Scripts/Cook.ts","manifest":{"properties":[{"assembly":"UnityEngine.UI","name":"serveButton","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"treshButton","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"productSlots","type":"UnityEngine.UI.Button[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"Unity.TextMeshPro","name":"productCountTexts","type":"TMPro.TextMeshProUGUI[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"plateSideImage","type":"UnityEngine.UI.Image","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"plateDrinkImage","type":"UnityEngine.UI.Image","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"plateImages","type":"UnityEngine.UI.Image[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]}],"name":"CookSlot","description":""},"isCompiled":true}'
  typescriptHash: 18b8a79eed9c9b49b9da4e482bc24e8d
  onlyWriteTrigger: 0
