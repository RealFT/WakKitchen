fileFormatVersion: 2
guid: 3be5c7b313a2b5a4da453620a4e110c9
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    UnityEngine_UI_1 = require(\"UnityEngine.UI\");\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    GameManager_1 = require(\"./GameManager\");\r\nconst UIManager_1 = require(\"./UIManager\");\r\nconst
    BalanceManager_1 = require(\"./Shop/BalanceManager\");\r\nconst DataManager_1
    = require(\"./DataManager\");\r\nconst EmployeeManager_1 = require(\"./Employee/EmployeeManager\");\r\n//
    Settlement UI class that displays information about daily profits and costs.\r\nclass
    Settlement extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor()
    {\r\n        super(...arguments);\r\n        this.animationInProgress = false;\r\n       
    // Array of Generator functions that will be stored in the animations array.\r\n       
    // Each function animates a single UI element with a corresponding value.\r\n       
    this.animations = [\r\n            () => this.NumberAnimation(this.totalSaleText,
    this.totalSale, this.animationDuration),\r\n            () => this.NumberAnimation(this.employeeText,
    -this.employeeCost, this.animationDuration),\r\n            // () => this.NumberAnimation(this.IngredientsText,
    -this.ingredientsCost, this.animationDuration),\r\n            () => this.NumberAnimation(this.netIncomeText,
    this.netIncome, this.animationDuration)\r\n        ];\r\n    }\r\n    Start()
    {\r\n        this.doubleIncomeButton.onClick.AddListener(() => {\r\n           
    this.OnDoubleIncome();\r\n        });\r\n        this.toShopButton.onClick.AddListener(()
    => {\r\n            UIManager_1.default.GetInstance().ToShop();\r\n        });\r\n   
    }\r\n    /**\r\n     * Coroutine function that animates a number on a Text UI
    element from 0 to the specified endNumber.\r\n     * @param targetText Text UI
    element that will display the animated number.\r\n     * @param endNumber The
    number that the animation will end on.\r\n     * @param duration The duration
    of the animation in seconds.\r\n     */\r\n    *NumberAnimation(targetText, endNumber,
    duration) {\r\n        let timer = 0;\r\n        while (timer < duration) {\r\n           
    const progress = timer / duration;\r\n            const currentNumber = Math.floor(UnityEngine_1.Mathf.Lerp(0,
    endNumber, progress));\r\n            targetText.text = currentNumber.toLocaleString();\r\n           
    yield new UnityEngine_1.WaitForSeconds(UnityEngine_1.Time.deltaTime);\r\n           
    timer += UnityEngine_1.Time.deltaTime;\r\n        }\r\n        targetText.text
    = `${endNumber}`;\r\n    }\r\n    //  Coroutine function that plays a sequence
    of animations stored in the animations array.\r\n    *AnimationSequence() {\r\n       
    for (const animation of this.animations) {\r\n            this.animationInProgress
    = true;\r\n            yield* animation();\r\n            this.animationInProgress
    = false;\r\n        }\r\n    }\r\n    // Called when the Settlement UI is enabled.\r\n   
    // Resets all Text UI elements to empty strings and starts the AnimationSequence
    coroutine.\r\n    OnEnable() {\r\n        this.doubleIncomeButton.gameObject.SetActive(true);\r\n       
    this.ResetPriceTexts();\r\n        this.GetPriceInformation();\r\n        this.StartCoroutine(this.AnimationSequence());\r\n   
    }\r\n    // Resets all Text UI elements to empty strings.\r\n    ResetPriceTexts()
    {\r\n        this.dateText.text = `Day ${GameManager_1.default.GetInstance().GetCurrentStage()}`;\r\n       
    this.totalSaleText.text = \"\";\r\n        this.employeeText.text = \"\";\r\n       
    // this.IngredientsText.text = \"\";\r\n        this.netIncomeText.text = \"\";\r\n   
    }\r\n    // Gets daily profit and cost information from the BalanceManager class
    and calculates net income.\r\n    GetPriceInformation() {\r\n        this.totalSale
    = BalanceManager_1.default.GetInstance().GetTotalGainBalanceHistory();\r\n       
    this.ingredientsCost = BalanceManager_1.default.GetInstance().GetTotalUseBalanceHistory();\r\n       
    this.employeeCost = EmployeeManager_1.default.GetInstance().GetTotalEmployeePay();\r\n       
    BalanceManager_1.default.GetInstance().UseAvailableBalance(BalanceManager_1.Currency.wak,
    this.employeeCost);\r\n        this.netIncome = this.totalSale - this.ingredientsCost
    - this.employeeCost;\r\n        this.netIncomeText.color = this.netIncome >=
    0 ? this.totalSaleText.color : this.employeeText.color;\r\n    }\r\n    // Doubles
    the current net income and displays the result using animation.\r\n    OnDoubleIncome()
    {\r\n        if (this.animationInProgress) {\r\n            return; // Ignore
    the click event if the animation is in progress.\r\n        }\r\n        // Initailize
    wakdu stamp\r\n        let currentWakdu = DataManager_1.default.GetInstance().GetValue(\"wakdu\");\r\n       
    if (currentWakdu > 0) {\r\n            // If wakdu stamps left, reduce one from
    the current count.            \r\n            DataManager_1.default.GetInstance().SetValue(\"wakdu\",
    currentWakdu - 1);\r\n            this.doubleIncomeButton.gameObject.SetActive(false);\r\n           
    // Double the current net income and add the previous net income as profit.\r\n           
    BalanceManager_1.default.GetInstance().GainBalance(BalanceManager_1.Currency.wak,
    this.netIncome);\r\n            this.netIncome *= 2;\r\n            // Run the
    ScoreAnimation coroutine.\r\n            this.animationInProgress = true;\r\n           
    this.StartCoroutine(this.NumberAnimation(this.netIncomeText, this.netIncome,
    this.animationDuration));\r\n        }\r\n        // If there are no more Wakdu
    stamps left, inform the user with an information popup.\r\n        else {\r\n           
    UIManager_1.default.GetInstance().OpenInformation(\"Not enough daily stamp.\");\r\n           
    return;\r\n        }\r\n    }\r\n}\r\nexports.default = Settlement;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2V0dGxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNldHRsZW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2Q0FBaUU7QUFDakUsbURBQThDO0FBQzlDLGlEQUFxRDtBQUNyRCwrQ0FBd0M7QUFDeEMsMkNBQW9DO0FBQ3BDLDBEQUFpRTtBQUNqRSwrQ0FBd0M7QUFDeEMsZ0VBQXlEO0FBRXpELCtFQUErRTtBQUMvRSxNQUFxQixVQUFXLFNBQVEscUNBQXFCO0lBQTdEOztRQVVZLHdCQUFtQixHQUFZLEtBQUssQ0FBQztRQUU3Qyw0RUFBNEU7UUFDNUUseUVBQXlFO1FBQ2pFLGVBQVUsR0FBd0I7WUFDdEMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1lBQ3RGLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1lBQ3pGLG1HQUFtRztZQUNuRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUM7U0FDekYsQ0FBQztJQXFHTixDQUFDO0lBOUZHLEtBQUs7UUFDRCxJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUU7WUFDN0MsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQzFCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRTtZQUN2QyxtQkFBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FB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","assetPath":"Assets/Scripts/Settlement.ts","manifest":{"properties":[{"assembly":"UnityEngine.UI","name":"dateText","type":"UnityEngine.UI.Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"totalSaleText","type":"UnityEngine.UI.Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"employeeText","type":"UnityEngine.UI.Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"IngredientsText","type":"UnityEngine.UI.Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"netIncomeText","type":"UnityEngine.UI.Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"doubleIncomeButton","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"toShopButton","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"animationDuration","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]}],"name":"Settlement","description":""},"isCompiled":true}'
  typescriptHash: a73ee9043691984c34bede981b753454
  onlyWriteTrigger: 0
