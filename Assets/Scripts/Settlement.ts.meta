fileFormatVersion: 2
guid: 3be5c7b313a2b5a4da453620a4e110c9
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst GameManager_1 = require(\"./GameManager\");\r\nconst
    UIManager_1 = require(\"./UIManager\");\r\nconst BalanceManager_1 = require(\"./Shop/BalanceManager\");\r\nconst
    DataManager_1 = require(\"./DataManager\");\r\nconst EmployeeManager_1 = require(\"./Employee/EmployeeManager\");\r\nconst
    SoundManager_1 = require(\"./SoundManager\");\r\n// Settlement UI class that
    displays information about daily profits and costs.\r\nclass Settlement extends
    ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor() {\r\n        super(...arguments);\r\n       
    this.animationInProgress = false;\r\n        // Array of Generator functions
    that will be stored in the animations array.\r\n        // Each function animates
    a single UI element with a corresponding value.\r\n        this.animations =
    [\r\n            () => this.NumberAnimation(this.totalSaleText, this.totalSale,
    this.animationDuration),\r\n            () => this.NumberAnimation(this.employeeText,
    -this.employeeCost, this.animationDuration),\r\n            // () => this.NumberAnimation(this.IngredientsText,
    -this.ingredientsCost, this.animationDuration),\r\n            () => this.NumberAnimation(this.netIncomeText,
    this.netIncome, this.animationDuration)\r\n        ];\r\n    }\r\n    Start()
    {\r\n        this.doubleIncomeButton.onClick.AddListener(() => {\r\n           
    this.OnDoubleIncome();\r\n            SoundManager_1.default.GetInstance().OnPlayButtonSFX(\"Purchase\");\r\n       
    });\r\n        this.toShopButton.onClick.AddListener(() => {\r\n            UIManager_1.default.GetInstance().ToShop();\r\n       
    });\r\n    }\r\n    /**\r\n     * Coroutine function that animates a number on
    a Text UI element from 0 to the specified endNumber.\r\n     * @param targetText
    Text UI element that will display the animated number.\r\n     * @param endNumber
    The number that the animation will end on.\r\n     * @param duration The duration
    of the animation in seconds.\r\n     */\r\n    *NumberAnimation(targetText, endNumber,
    duration) {\r\n        let timer = 0;\r\n        while (timer < duration) {\r\n           
    const progress = timer / duration;\r\n            const currentNumber = Math.floor(UnityEngine_1.Mathf.Lerp(0,
    endNumber, progress));\r\n            targetText.text = currentNumber.toLocaleString();\r\n           
    yield new UnityEngine_1.WaitForSeconds(UnityEngine_1.Time.deltaTime);\r\n           
    timer += UnityEngine_1.Time.deltaTime;\r\n        }\r\n        targetText.text
    = `${endNumber}`;\r\n    }\r\n    //  Coroutine function that plays a sequence
    of animations stored in the animations array.\r\n    *AnimationSequence() {\r\n       
    for (const animation of this.animations) {\r\n            this.animationInProgress
    = true;\r\n            yield* animation();\r\n            this.animationInProgress
    = false;\r\n        }\r\n    }\r\n    // Called when the Settlement UI is enabled.\r\n   
    // Resets all Text UI elements to empty strings and starts the AnimationSequence
    coroutine.\r\n    OnEnable() {\r\n        this.doubleIncomeButton.gameObject.SetActive(true);\r\n       
    this.ResetPriceTexts();\r\n        this.GetPriceInformation();\r\n        this.StartCoroutine(this.AnimationSequence());\r\n       
    SoundManager_1.default.GetInstance().OnPlayOnceBGM(SoundManager_1.default.GetInstance().keySettlement);\r\n   
    }\r\n    // Resets all Text UI elements to empty strings.\r\n    ResetPriceTexts()
    {\r\n        this.dateText.text = `Day ${GameManager_1.default.GetInstance().GetCurrentStage()}`;\r\n       
    this.totalSaleText.text = \"\";\r\n        this.employeeText.text = \"\";\r\n       
    // this.IngredientsText.text = \"\";\r\n        this.netIncomeText.text = \"\";\r\n   
    }\r\n    // Gets daily profit and cost information from the BalanceManager class
    and calculates net income.\r\n    GetPriceInformation() {\r\n        this.totalSale
    = BalanceManager_1.default.GetInstance().GetTotalGainBalanceHistory();\r\n       
    this.ingredientsCost = BalanceManager_1.default.GetInstance().GetTotalUseBalanceHistory();\r\n       
    this.employeeCost = EmployeeManager_1.default.GetInstance().GetTotalEmployeePay();\r\n       
    if (this.employeeCost > 0)\r\n            BalanceManager_1.default.GetInstance().UseAvailableBalance(BalanceManager_1.Currency.wak,
    this.employeeCost);\r\n        this.netIncome = this.totalSale - this.ingredientsCost
    - this.employeeCost;\r\n        this.netIncomeText.color = this.netIncome >=
    0 ? this.totalSaleText.color : this.employeeText.color;\r\n    }\r\n    // Doubles
    the current net income and displays the result using animation.\r\n    OnDoubleIncome()
    {\r\n        if (this.animationInProgress) {\r\n            return; // Ignore
    the click event if the animation is in progress.\r\n        }\r\n        // Initailize
    wakdu stamp\r\n        let currentWakdu = DataManager_1.default.GetInstance().GetValue(\"wakdu\");\r\n       
    if (currentWakdu > 0) {\r\n            // If wakdu stamps left, reduce one from
    the current count.            \r\n            DataManager_1.default.GetInstance().SetValue(\"wakdu\",
    currentWakdu - 1);\r\n            this.doubleIncomeButton.gameObject.SetActive(false);\r\n           
    // Double the current net income and add the previous net income as profit.\r\n           
    BalanceManager_1.default.GetInstance().GainBalance(BalanceManager_1.Currency.wak,
    this.netIncome);\r\n            this.netIncome *= 2;\r\n            // Run the
    ScoreAnimation coroutine.\r\n            this.animationInProgress = true;\r\n           
    this.StartCoroutine(this.NumberAnimation(this.netIncomeText, this.netIncome,
    this.animationDuration));\r\n        }\r\n        // If there are no more Wakdu
    stamps left, inform the user with an information popup.\r\n        else {\r\n           
    UIManager_1.default.GetInstance().OpenInformation(\"Not enough daily stamp.\");\r\n           
    return;\r\n        }\r\n    }\r\n}\r\nexports.default = Settlement;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2V0dGxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNldHRsZW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2Q0FBaUU7QUFFakUsaURBQXFEO0FBQ3JELCtDQUF3QztBQUN4QywyQ0FBb0M7QUFDcEMsMERBQWlFO0FBQ2pFLCtDQUF3QztBQUN4QyxnRUFBeUQ7QUFDekQsaURBQTBDO0FBRTFDLCtFQUErRTtBQUMvRSxNQUFxQixVQUFXLFNBQVEscUNBQXFCO0lBQTdEOztRQVVZLHdCQUFtQixHQUFZLEtBQUssQ0FBQztRQUU3Qyw0RUFBNEU7UUFDNUUseUVBQXlFO1FBQ2pFLGVBQVUsR0FBd0I7WUFDdEMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1lBQ3RGLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1lBQ3pGLG1HQUFtRztZQUNuRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUM7U0FDekYsQ0FBQztJQXVHTixDQUFDO0lBaEdHLEtBQUs7UUFDRCxJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUU7WUFDN0MsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3RCLHNCQUFZLENBQUMsV0FBVyxFQUFFLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzNELENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdB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","assetPath":"Assets/Scripts/Settlement.ts","manifest":{"properties":[{"assembly":"UnityEngine.UI","name":"dateText","type":"UnityEngine.UI.Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"totalSaleText","type":"UnityEngine.UI.Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"employeeText","type":"UnityEngine.UI.Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"IngredientsText","type":"UnityEngine.UI.Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"netIncomeText","type":"UnityEngine.UI.Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"doubleIncomeButton","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"toShopButton","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"animationDuration","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]}],"name":"Settlement","description":""},"isCompiled":true}'
  typescriptHash: ace44710fd3ac05993009fbd4a5fffa7
  onlyWriteTrigger: 0
