fileFormatVersion: 2
guid: 5619f44d85f791842a329af299e534c9
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    GameManager_1 = require(\"./GameManager\");\r\nconst UIManager_1 = require(\"./UIManager\");\r\nclass
    ItemSlot extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    SetItemSlot(item)
    {\r\n        this.storeItem = item;\r\n        this.buyBtn.onClick.AddListener(()
    => {\r\n            this.buyItem(item);\r\n        });\r\n    }\r\n    buyItem(item)
    {\r\n        const money = GameManager_1.default.GetInstance().getCurrentMoney();\r\n       
    if (money < item.price) {\r\n            // The player doesn''t have enough money
    to buy the item.\r\n            console.log(''Not enough money to buy this item!'');\r\n           
    return;\r\n        }\r\n        // Subtract the cost of the item from the player''s
    money.\r\n        GameManager_1.default.GetInstance().changeMoney(-item.price);\r\n       
    // Add the item to the player''s inventory.\r\n        //this.inventory.push(item);\r\n       
    // Update the UI to reflect the changes.\r\n        //this.updateInventoryUI();\r\n       
    UIManager_1.default.GetInstance().setGameMoneyText(money);\r\n    }\r\n    GetStoreItem()
    {\r\n        return this.storeItem;\r\n    }\r\n}\r\nexports.default = ItemSlot;\r\n//#
    sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXRlbVNsb3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJJdGVtU2xvdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLGlEQUFxRDtBQUNyRCwrQ0FBd0M7QUFFeEMsMkNBQW9DO0FBRXBDLE1BQXFCLFFBQVMsU0FBUSxxQ0FBcUI7SUFRaEQsV0FBVyxDQUFDLElBQWU7UUFDOUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRTtZQUNqQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVNLE9BQU8sQ0FBQyxJQUFlO1FBQzFCLE1BQU0sS0FBSyxHQUFHLHFCQUFXLENBQUMsV0FBVyxFQUFFLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDMUQsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNwQix3REFBd0Q7WUFDeEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1lBQ2xELE9BQU87U0FDVjtRQUVELHlEQUF5RDtRQUN6RCxxQkFBVyxDQUFDLFdBQVcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVuRCwwQ0FBMEM7UUFDMUMsNEJBQTRCO1FBRTVCLHdDQUF3QztRQUN4QywyQkFBMkI7UUFDM0IsbUJBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRU0sWUFBWTtRQUNmLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMxQixDQUFDO0NBQ0o7QUFyQ0QsMkJBcUNDIn0=","assetPath":"Assets/Scripts/ItemSlot.ts","manifest":{"properties":[{"assembly":"","name":"storeItem","type":"C:/Users/Jun/Documents/GitHub/WakKitchen/Assets/Scripts/Store.StoreItem","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"","name":"nameText","type":"Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.UI","name":"itemImage","type":"UnityEngine.UI.Image","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"","name":"priceText","type":"Text","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.UI","name":"buyBtn","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"ItemSlot","description":""},"isCompiled":true}'
  typescriptHash: 16324b5cbbeda47d0728b8f17671bcbd
  onlyWriteTrigger: 0
