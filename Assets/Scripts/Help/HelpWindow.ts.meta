fileFormatVersion: 2
guid: 139dd9d9641a5fc4f8bbaed51be6c6dc
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nclass
    HelpWindow extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor()
    {\r\n        super(...arguments);\r\n        this.gameObjectMap = new Map();\r\n   
    }\r\n    Start() {\r\n        for (const gameObject of this.guideObjects) {\r\n           
    const name = gameObject.name; // Get the name of the current GameObject.\r\n           
    const words = name.split(\"_\"); // Split the name by ''_'' to get an array of
    words.\r\n            const firstWord = words[0]; // Get the first word of the
    name.\r\n            let group = this.gameObjectMap.get(firstWord); // Get the
    array of GameObjects with the same first word.\r\n            if (!group) { //
    If there is no array for the first word yet, create a new one.\r\n               
    group = [];\r\n                this.gameObjectMap.set(firstWord, group);\r\n           
    }\r\n            group.push(gameObject); // Add the current GameObject to the
    array of GameObjects with the same first word.\r\n        }\r\n    }\r\n    SetBackgroundAlpha(alpha)
    {\r\n        this.background.color.a = alpha;\r\n    }\r\n}\r\nexports.default
    = HelpWindow;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGVscFdpbmRvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkhlbHBXaW5kb3cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBcUQ7QUFJckQsTUFBcUIsVUFBVyxTQUFRLHFDQUFxQjtJQUE3RDs7UUFLWSxrQkFBYSxHQUFHLElBQUksR0FBRyxFQUF3QixDQUFDO0lBb0I1RCxDQUFDO0lBbEJHLEtBQUs7UUFDRCxLQUFLLE1BQU0sVUFBVSxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDeEMsTUFBTSxJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLDBDQUEwQztZQUN4RSxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsa0RBQWtEO1lBQ2pGLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLGtDQUFrQztZQUM5RCxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLHlEQUF5RDtZQUN4RyxJQUFJLENBQUMsS0FBSyxFQUFFLEVBQUUsaUVBQWlFO2dCQUM3RSxLQUFLLEdBQUcsRUFBRSxDQUFDO2dCQUNYLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQzthQUMxQztZQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxtRkFBbUY7U0FDNUc7SUFDUCxDQUFDO0lBRU0sa0JBQWtCLENBQUMsS0FBYTtRQUNuQyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ3BDLENBQUM7Q0FFSjtBQXpCRCw2QkF5QkMifQ==","assetPath":"Assets/Scripts/Help/HelpWindow.ts","manifest":{"properties":[{"assembly":"UnityEngine.UI","name":"background","type":"UnityEngine.UI.Image","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"guideObjects","type":"UnityEngine.GameObject[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"Unity.TextMeshPro","name":"helpText","type":"TMPro.TextMeshProUGUI","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]}],"name":"HelpWindow","description":""},"isCompiled":true}'
  typescriptHash: afc22d0e33e742d3f7db51ba05ce5e33
  onlyWriteTrigger: 0
