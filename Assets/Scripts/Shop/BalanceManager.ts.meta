fileFormatVersion: 2
guid: 9b47c7b7a6ff8e744863bfb3450a4784
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: "{\"source\":\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports,
    \\\"__esModule\\\", { value: true });\\r\\nexports.ItemType = exports.Currency
    = exports.InventoryAction = void 0;\\r\\nconst ZEPETO_Script_1 = require(\\\"ZEPETO.Script\\\");\\r\\nconst
    UnityEngine_1 = require(\\\"UnityEngine\\\");\\r\\nconst ZEPETO_Currency_1 =
    require(\\\"ZEPETO.Currency\\\");\\r\\nconst ZEPETO_Product_1 = require(\\\"ZEPETO.Product\\\");\\r\\nconst
    ZEPETO_World_1 = require(\\\"ZEPETO.World\\\");\\r\\nconst ZEPETO_Multiplay_1
    = require(\\\"ZEPETO.Multiplay\\\");\\r\\nconst Mediator_1 = require(\\\"../Notification/Mediator\\\");\\r\\nconst
    GameManager_1 = require(\\\"../GameManager\\\");\\r\\nconst UIManager_1 = require(\\\"../UIManager\\\");\\r\\nconst
    DataManager_1 = require(\\\"../DataManager\\\");\\r\\nclass BalanceManager extends
    ZEPETO_Script_1.ZepetoScriptBehaviour {\\r\\n    constructor() {\\r\\n       
    super(...arguments);\\r\\n        this.gainBalanceHistory = [];\\r\\n       
    this.useBalanceHistory = [];\\r\\n    }\\r\\n    static GetInstance() {\\r\\n       
    if (!BalanceManager.Instance) {\\r\\n            //Debug.LogError(\\\"BalanceManager\\\");\\r\\n           
    var _obj = UnityEngine_1.GameObject.Find(\\\"BalanceManager\\\");\\r\\n           
    if (!_obj) {\\r\\n                _obj = new UnityEngine_1.GameObject(\\\"BalanceManager\\\");\\r\\n               
    _obj.AddComponent($typeof(BalanceManager));\\r\\n            }\\r\\n           
    BalanceManager.Instance = _obj.GetComponent($typeof(BalanceManager));\\r\\n           
    UnityEngine_1.GameObject.DontDestroyOnLoad(_obj);\\r\\n        }\\r\\n       
    return BalanceManager.Instance;\\r\\n    }\\r\\n    Awake() {\\r\\n        if
    (this != BalanceManager.GetInstance())\\r\\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\\r\\n   
    }\\r\\n    IsRefreshed() { return this.isRefreshed; }\\r\\n    Start() {\\r\\n       
    Mediator_1.default.GetInstance().RegisterListener(this);\\r\\n        this.RefreshAllBalanceUI();\\r\\n       
    this._multiplay = UnityEngine_1.Object.FindObjectOfType($typeof(ZEPETO_World_1.ZepetoWorldMultiplay));\\r\\n       
    this._multiplay.add_RoomJoined((room) => {\\r\\n            this._room = room;\\r\\n           
    this.InitMessageHandler();\\r\\n        });\\r\\n    }\\r\\n    InitMessageHandler()
    {\\r\\n        this._room.AddMessageHandler(\\\"SyncBalances\\\", (message) =>
    {\\r\\n            this.RefreshAllBalanceUI();\\r\\n            this.isRefreshed
    = true;\\r\\n        });\\r\\n        ZEPETO_Product_1.ProductService.OnPurchaseCompleted.AddListener((product,
    response) => {\\r\\n            this.RefreshAllBalanceUI();\\r\\n        });\\r\\n   
    }\\r\\n    RefreshAllBalanceUI() {\\r\\n        this.StartCoroutine(this.RefreshBalanceUI());\\r\\n   
    }\\r\\n    *RefreshBalanceUI() {\\r\\n        const request = ZEPETO_Currency_1.CurrencyService.GetUserCurrencyBalancesAsync();\\r\\n       
    yield new UnityEngine_1.WaitUntil(() => request.keepWaiting == false);\\r\\n       
    if (request.responseData.isSuccess) {\\r\\n            const possessionMoney
    = request.responseData.currencies?.ContainsKey(Currency.wak) ? request.responseData.currencies?.get_Item(Currency.wak).toString()
    : \\\"0\\\";\\r\\n            // Mediator\uB97C \uD1B5\uD574 UI \uD074\uB798\uC2A4\uC5D0
    possessionMoney\uAC12 \uC804\uB2EC\\r\\n            this.possessionMoney = parseInt(possessionMoney);\\r\\n           
    Mediator_1.default.GetInstance().Notify(this, Mediator_1.EventNames.PossessionMoneyUpdated,
    possessionMoney);\\r\\n        }\\r\\n        else {\\r\\n            UIManager_1.default.GetInstance().OpenInformation(\\\"ERROR:
    CURRENCY REQUEST FAIL\\\");\\r\\n        }\\r\\n    }\\r\\n    GainStageBalance(currencyId,
    quantity) {\\r\\n        // if in Game, Add balance to history\\r\\n        if
    (GameManager_1.default.GetInstance().isInGame)\\r\\n            this.gainBalanceHistory.push({
    currencyId, quantity });\\r\\n        UIManager_1.default.GetInstance().SetPossessionMoneyText((this.possessionMoney
    + this.GetTotalGainBalanceHistory()).toString());\\r\\n    }\\r\\n    UseStageBalance(currencyId,
    quantity) {\\r\\n        // if in Game, Add balance to history\\r\\n        if
    (GameManager_1.default.GetInstance().isInGame)\\r\\n            this.gainBalanceHistory.push({
    currencyId, quantity });\\r\\n        UIManager_1.default.GetInstance().SetPossessionMoneyText((this.possessionMoney
    + this.GetTotalGainBalanceHistory()).toString());\\r\\n    }\\r\\n    GainBalance(currencyId,
    quantity) {\\r\\n        this.isRefreshed = false;\\r\\n        const data =
    new ZEPETO_Multiplay_1.RoomData();\\r\\n        data.Add(\\\"currencyId\\\",
    currencyId);\\r\\n        data.Add(\\\"quantity\\\", quantity);\\r\\n       
    this._multiplay.Room?.Send(\\\"onCredit\\\", data.GetObject());\\r\\n       
    // if in Game, Add balance to history\\r\\n        //if (GameManager.GetInstance().isInGame)
    this.gainBalanceHistory.push({ currencyId, quantity });\\r\\n    }\\r\\n    GetPossessionMoney()
    {\\r\\n        this.GainBalance(\\\"wak\\\", 0);\\r\\n        return this.possessionMoney;\\r\\n   
    }\\r\\n    GetAvailableBalance(quantity) {\\r\\n        if (this.possessionMoney
    < quantity) {\\r\\n            quantity = this.possessionMoney;\\r\\n       
    }\\r\\n        return quantity;\\r\\n    }\\r\\n    UseAvailableBalance(currencyId,
    quantity) {\\r\\n        this.isRefreshed = false;\\r\\n        if (this.possessionMoney
    < quantity) {\\r\\n            quantity = this.possessionMoney;\\r\\n       
    }\\r\\n        this.UseBalance(currencyId, quantity);\\r\\n    }\\r\\n    UseBalance(currencyId,
    quantity) {\\r\\n        if (this.possessionMoney < quantity) {\\r\\n           
    // Not enough currency.\\r\\n            UIManager_1.default.GetInstance().OpenInformation(DataManager_1.default.GetInstance().GetCurrentLanguageData(\\\"info_nocurruncey\\\"));\\r\\n           
    return false;\\r\\n        }\\r\\n        this.isRefreshed = false;\\r\\n       
    const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n        data.Add(\\\"currencyId\\\",
    currencyId);\\r\\n        data.Add(\\\"quantity\\\", quantity);\\r\\n       
    this._multiplay.Room?.Send(\\\"onDebit\\\", data.GetObject());\\r\\n        //
    console.warn(\\\"UseBalance: \\\" + quantity);\\r\\n        // if in Game, Add
    balance to history\\r\\n        // if(GameManager.GetInstance().isInGame) this.useBalanceHistory.push({
    currencyId, quantity });\\r\\n        this.RefreshAllBalanceUI();\\r\\n       
    return true;\\r\\n    }\\r\\n    GetTotalGainBalanceHistory() {\\r\\n       
    return this.gainBalanceHistory.reduce((total, curr) => total + curr.quantity,
    0);\\r\\n    }\\r\\n    GetTotalUseBalanceHistory() {\\r\\n        return this.useBalanceHistory.reduce((total,
    curr) => total + curr.quantity, 0);\\r\\n    }\\r\\n    ClearAllBalanceHistory()
    {\\r\\n        this.gainBalanceHistory = [];\\r\\n        this.useBalanceHistory
    = [];\\r\\n    }\\r\\n    OnNotify(sender, eventName, eventData) {\\r\\n       
    if (eventName == Mediator_1.EventNames.CurrencyUpdatedEvent) {\\r\\n           
    this.RefreshAllBalanceUI();\\r\\n        }\\r\\n    }\\r\\n    OnDestroy() {\\r\\n       
    Mediator_1.default.GetInstance().UnregisterListener(this);\\r\\n    }\\r\\n}\\r\\nexports.default
    = BalanceManager;\\r\\nvar InventoryAction;\\r\\n(function (InventoryAction)
    {\\r\\n    InventoryAction[InventoryAction[\\\"Removed\\\"] = -1] = \\\"Removed\\\";\\r\\n   
    InventoryAction[InventoryAction[\\\"Used\\\"] = 0] = \\\"Used\\\";\\r\\n    InventoryAction[InventoryAction[\\\"Added\\\"]
    = 1] = \\\"Added\\\";\\r\\n})(InventoryAction = exports.InventoryAction || (exports.InventoryAction
    = {}));\\r\\nvar Currency;\\r\\n(function (Currency) {\\r\\n    Currency[\\\"wak\\\"]
    = \\\"wak\\\";\\r\\n})(Currency = exports.Currency || (exports.Currency = {}));\\r\\nvar
    ItemType;\\r\\n(function (ItemType) {\\r\\n    ItemType[\\\"food\\\"] = \\\"food\\\";\\r\\n   
    ItemType[\\\"upgrade\\\"] = \\\"upgrade\\\";\\r\\n    ItemType[\\\"card\\\"]
    = \\\"card\\\";\\r\\n})(ItemType = exports.ItemType || (exports.ItemType = {}));\\r\\n//#
    sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmFsYW5jZU1hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJCYWxhbmNlTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpREFBcUQ7QUFFckQsNkNBQTJEO0FBRTNELHFEQUFzRjtBQUN0RixtREFBK0Q7QUFDL0QsK0NBQW9EO0FBQ3BELHVEQUFrRDtBQUNsRCx1REFBMkU7QUFDM0UsZ0RBQXlDO0FBQ3pDLDRDQUFxQztBQUNyQyxnREFBeUM7QUFFekMsTUFBcUIsY0FBZSxTQUFRLHFDQUFxQjtJQUFqRTs7UUFzQlksdUJBQWtCLEdBQStDLEVBQUUsQ0FBQztRQUNwRSxzQkFBaUIsR0FBK0MsRUFBRSxDQUFDO0lBaUkvRSxDQUFDO0lBckpVLE1BQU0sQ0FBQyxXQUFXO1FBRXJCLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFO1lBQzFCLG1DQUFtQztZQUVuQyxJQUFJLElBQUksR0FBRyx3QkFBVSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1lBQzdDLElBQUksQ0FBQyxJQUFJLEVBQUU7Z0JBQ1AsSUFBSSxHQUFHLElBQUksd0JBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO2dCQUN4QyxJQUFJLENBQUMsWUFBWSxTQUFDLGNBQWMsR0FBSTthQUN2QztZQUNELGNBQWMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFlBQVksU0FBQyxjQUFjLEVBQUcsQ0FBQztZQUM5RCx3QkFBVSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3RDO1FBQ0QsT0FBTyxjQUFjLENBQUMsUUFBUSxDQUFDO0lBQ25DLENBQUM7SUFDRCxLQUFLO1FBQ0QsSUFBSSxJQUFJLElBQUksY0FBYyxDQUFDLFdBQVcsRUFBRTtZQUFFLHdCQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNsRixDQUFDO0lBU00sV0FBVyxLQUFjLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxD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\",\"assetPath\":\"Assets/Scripts/Shop/BalanceManager.ts\",\"manifest\":{\"properties\":[],\"name\":\"BalanceManager\",\"description\":\"\"},\"isCompiled\":true}"
  typescriptHash: e80c0f5c89a45a2d6390d4679b688ec7
  onlyWriteTrigger: 0
