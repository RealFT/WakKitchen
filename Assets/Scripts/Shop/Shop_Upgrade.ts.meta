fileFormatVersion: 2
guid: e05e0932d93802c48921f478b8fc1f77
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst ItemSlot_Upgrade_1 = require(\"./ItemSlot_Upgrade\");\r\nconst
    ItemManager_1 = require(\"../ItemManager\");\r\nclass Shop_Upgrade extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    Start() {\r\n        //this.CreateSlot(ItemManager.GetInstance().getUpgradeCache());\r\n       
    this.debugBtn.onClick.AddListener(() => {\r\n            this.CreateSlot(ItemManager_1.default.GetInstance().getUpgradeCache());\r\n       
    });\r\n    }\r\n    CreateSlot(items) {\r\n        // // Clear the existing items
    in the content parent.\r\n        // this.horizontalContent.GetComponentsInChildren<ItemSlot_Upgrade>().forEach((child)
    => {\r\n        //     GameObject.Destroy(child.gameObject);\r\n        // });\r\n       
    const regex = /(\\w+)_(\\w+)_(\\d)/;\r\n        // Create an Upgrade Slot for
    each item in the list.\r\n        for (let productRecord of items) {\r\n           
    // only not Purchased Items\r\n            if (!productRecord.isPurchased) {\r\n               
    // Set up the item''s image using the itemImages array.\r\n                const
    match = productRecord.productId.match(regex);\r\n                const itemName
    = match ? match.get_Item(2) : \"\";\r\n                UnityEngine_1.Debug.Log(productRecord);\r\n               
    this.SetupUpgradeSlot(productRecord, match.get_Item(2));\r\n            }\r\n       
    }\r\n        // items.forEach((productRecord) => {\r\n        //     // only
    not Purchased Items\r\n        //     if (!productRecord.isPurchased) {\r\n       
    //         // Set up the item''s image using the itemImages array.\r\n       
    //         const match = productRecord.productId.match(regex);\r\n        //        
    const itemName = match ? match[1] : \"\";\r\n        //         Debug.Log(productRecord);\r\n       
    //         this.SetupUpgradeSlot(productRecord, match[1]);\r\n        //    
    }\r\n        // });\r\n    }\r\n    SetupUpgradeSlot(itemRecord, itemName) {\r\n       
    // Instantiate a new item object and set its parent to the content parent object.\r\n       
    const slotObj = UnityEngine_1.Object.Instantiate(this.upgradeSlotPref, this.horizontalContent.transform);\r\n       
    // Calculate the new width of the Content object based on the width of the prefabs
    and the spacing.\r\n        let prefabWidth = slotObj.GetComponent($typeof(UnityEngine_1.RectTransform)).rect.width;\r\n       
    let spacing = this.layoutGroup.spacing;\r\n        let newWidth = this.horizontalContent.rect.width
    + prefabWidth + spacing;\r\n        // Set the size of the Content object using
    its sizeDelta property.\r\n        this.horizontalContent.sizeDelta = new UnityEngine_1.Vector2(newWidth,
    this.horizontalContent.sizeDelta.y);\r\n        const itemImageIndex = this.itemImages.findIndex((s)
    => s.name === itemName);\r\n        // const itemImageIndex = this.itemImages.findIndex((s)
    => s.name == itemRecord.productId);\r\n        const itemImage = this.itemImages[itemImageIndex];\r\n       
    // Set up the item''s properties using its ITM_Inventory component.\r\n       
    const itemScript = slotObj.GetComponent($typeof(ItemSlot_Upgrade_1.default));\r\n       
    itemScript.SetItem(itemRecord, itemImage);\r\n    }\r\n}\r\nexports.default =
    Shop_Upgrade;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2hvcF9VcGdyYWRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiU2hvcF9VcGdyYWRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQW1HO0FBRW5HLGlEQUFxRDtBQUNyRCx5REFBa0Q7QUFFbEQsZ0RBQXlDO0FBRXpDLE1BQXFCLFlBQWEsU0FBUSxxQ0FBcUI7SUFTM0QsS0FBSztRQUNELCtEQUErRDtRQUMvRCxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRSxFQUFFO1lBQ2xDLElBQUksQ0FBQyxVQUFVLENBQUMscUJBQVcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDO1FBQ2pFLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVPLFVBQVUsQ0FBQyxLQUFzQjtRQUNyQyxxREFBcUQ7UUFDckQsMEZBQTBGO1FBQzFGLDRDQUE0QztRQUM1QyxNQUFNO1FBRU4sTUFBTSxLQUFLLEdBQUcsa0JBQWtCLENBQUM7UUFDakMsb0RBQW9EO1FBQ3BELEtBQUksSUFBSSxhQUFhLElBQUksS0FBSyxFQUFFO1lBQzVCLDJCQUEyQjtZQUMzQixJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRTtnQkFDNUIsc0RBQXNEO2dCQUN0RCxNQUFNLEtBQUssR0FBRyxhQUFhLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDbkQsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLFVBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUM7Z0JBQ3ZDLG1CQUFLLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDO2dCQUN6QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLEtBQUssVUFBQyxDQUFDLEVBQUUsQ0FBQzthQUNsRDtTQUNKO1FBQ0QscUNBQXFDO1FBQ3JDLGtDQUFrQztRQUNsQyx3Q0FBd0M7UUFDeEMsaUVBQWlFO1FBQ2pFLDhEQUE4RDtRQUM5RCxrREFBa0Q7UUFDbEQsb0NBQW9DO1FBQ3BDLDBEQUEwRDtRQUMxRCxRQUFRO1FBQ1IsTUFBTTtJQUNWLENBQUM7SUFFTyxnQkFBZ0IsQ0FBQyxVQUF5QixFQUFFLFFBQWdCO1FBQ2hFLGlGQUFpRjtRQUNqRixNQUFNLE9BQU8sR0FBRyxvQkFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQWUsQ0FBQztRQUV6RyxtR0FBbUc7UUFDbkcsSUFBSSxXQUFXLEdBQUcsT0FBTyxDQUFDLFlBQVksU0FBQywyQkFBYSxHQUFJLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDbkUsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUM7UUFDdkMsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsV0FBVyxHQUFHLE9BQU8sQ0FBQztRQUV6RSxtRUFBbUU7UUFDbkUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFNBQVMsR0FBRyxJQUFJLHFCQUFPLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFN0YsTUFBTSxjQUFjLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUM7UUFFN0UsMkZBQTJGO1FBQzNGLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLENBQUM7UUFFbEQsa0VBQWtFO1FBQ2xFLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxZQUFZLFNBQUMsMEJBQWdCLEVBQUcsQ0FBQztRQUM1RCxVQUFVLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM5QyxDQUFDO0NBRUo7QUFwRUQsK0JBb0VDIn0=","assetPath":"Assets/Scripts/Shop/Shop_Upgrade.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"upgradeSlotPref","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"horizontalContent","type":"UnityEngine.RectTransform","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"layoutGroup","type":"UnityEngine.UI.HorizontalLayoutGroup","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"itemImages","type":"UnityEngine.Sprite[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"debugBtn","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"Shop_Upgrade","description":""},"isCompiled":true}'
  typescriptHash: 3bf3ba5b788a3f3baa2994925b855a2e
  onlyWriteTrigger: 0
