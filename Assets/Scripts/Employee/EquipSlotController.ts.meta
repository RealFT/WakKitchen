fileFormatVersion: 2
guid: 98ca602668a519840a0407922b8a25ec
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: "{\"source\":\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports,
    \\\"__esModule\\\", { value: true });\\r\\nconst ZEPETO_Script_1 = require(\\\"ZEPETO.Script\\\");\\r\\nconst
    UnityEngine_1 = require(\\\"UnityEngine\\\");\\r\\nconst EquipSlot_1 = require(\\\"./EquipSlot\\\");\\r\\nconst
    CardData_1 = require(\\\"./CardData\\\");\\r\\nconst ItemManager_1 = require(\\\"../ItemManager\\\");\\r\\nconst
    UIManager_1 = require(\\\"../UIManager\\\");\\r\\nconst SoundManager_1 = require(\\\"../SoundManager\\\");\\r\\nconst
    Mediator_1 = require(\\\"../Notification/Mediator\\\");\\r\\nconst DataManager_1
    = require(\\\"../DataManager\\\");\\r\\nconst EmployeeManager_1 = require(\\\"./EmployeeManager\\\");\\r\\nclass
    EquipSlotController extends ZEPETO_Script_1.ZepetoScriptBehaviour {\\r\\n   
    constructor() {\\r\\n        super(...arguments);\\r\\n        this.equipSlots
    = [];\\r\\n    }\\r\\n    Start() {\\r\\n        this.equipSlots = this.equipSlotParent.GetComponentsInChildren($typeof(EquipSlot_1.default));\\r\\n       
    for (let i = 0; i < this.equipSlots.length; i++) {\\r\\n            let toggle
    = this.equipSlots[i].GetSelectSectionOpenToggle();\\r\\n            toggle.onValueChanged.AddListener((isOn)
    => {\\r\\n                if (isOn) {\\r\\n                    this.OnToggleValueChanged(toggle);\\r\\n               
    }\\r\\n            });\\r\\n        }\\r\\n        const upgradedlevel = ItemManager_1.default.GetInstance().GetUpgradedLevel(\\\"employee\\\");\\r\\n       
    this.EquipUnlock(upgradedlevel);\\r\\n        this.ClearSlots();\\r\\n       
    // \uAE30\uB85D\uB41C \uB370\uC774\uD130 \uBD88\uB7EC\uC624\uAE30\\r\\n       
    // \uAE30\uBCF8\uAC12\uC774 0 \uC774\uBBC0\uB85C \uC778\uB371\uC2A4\uAC00 0\uC77C
    \uACBD\uC6B0\uB97C \uB300\uBE44\uD574 +1 \uB85C \uC800\uC7A5.\\r\\n        //
    \uAC12\uC744 \uAC00\uC838\uC62C \uB54C -1 \uC5F0\uC0B0 \uD544\uC694\\r\\n       
    const sprites = DataManager_1.default.GetInstance().GetSectionSprites();\\r\\n       
    for (let index = 0; index < this.equipSlots.length; index++) {\\r\\n           
    const cardId = DataManager_1.default.GetInstance().GetStrValue(`EquipSlot_${index}`);\\r\\n           
    if (cardId == \\\"\\\")\\r\\n                continue;\\r\\n            else
    {\\r\\n                const cardData = DataManager_1.default.GetInstance().GetCardData(cardId);\\r\\n               
    this.equipSlots[index].EquipCard(cardData, index);\\r\\n                const
    sectionIndex = DataManager_1.default.GetInstance().GetValue(`EquipSlot_Section_${index}`);\\r\\n               
    if (sectionIndex != 0) {\\r\\n                    this.equipSlots[index].SelectSection(sprites[sectionIndex
    - 1], sectionIndex - 1);\\r\\n                }\\r\\n            }\\r\\n       
    }\\r\\n        Mediator_1.default.GetInstance().RegisterListener(this);\\r\\n   
    }\\r\\n    OnDestroy() {\\r\\n        Mediator_1.default.GetInstance().UnregisterListener(this);\\r\\n   
    }\\r\\n    OnNotify(sender, eventName, eventData) {\\r\\n        switch (eventName)
    {\\r\\n            case Mediator_1.EventNames.UpgradeUpdated:\\r\\n               
    const upgradedLevel = ItemManager_1.default.GetInstance().GetUpgradedLevel(\\\"employee\\\");\\r\\n               
    this.EquipUnlock(upgradedLevel);\\r\\n                break;\\r\\n           
    case Mediator_1.EventNames.StageEnded:\\r\\n                for (let i = 0; i
    < this.equipSlots.length; i++) {\\r\\n                    if (this.equipSlots[i].IsEquip()
    == false)\\r\\n                        continue;\\r\\n                    else
    if (DataManager_1.default.GetInstance().UseCard(this.equipSlots[i].getEquippedCardData().GetCardId(),
    1) == false) {\\r\\n                        EmployeeManager_1.default.GetInstance().UnregisterCard(i);\\r\\n                       
    this.equipSlots[i].InitSlot();\\r\\n                    }\\r\\n               
    }\\r\\n                break;\\r\\n            default:\\r\\n               
    // In case an unhandled event occurs\\r\\n                break;\\r\\n       
    }\\r\\n    }\\r\\n    // \uB2E4\uB978 \uC7A5\uCC29 \uCE90\uB9AD\uD130\uC758 \uC139\uC158
    \uC120\uD0DD \uC2DC \uB2E4\uB978 \uC139\uC158\uC740 \uBE44\uD65C\uC131\uD654\uB418\uB294
    \uAE30\uB2A5\\r\\n    OnToggleValueChanged(toggle) {\\r\\n        if (toggle
    != this.selectedToggle) {\\r\\n            // If a different toggle is selected\\r\\n           
    if (this.selectedToggle) {\\r\\n                this.selectedToggle.isOn = false;
    // Deselect the previously selected toggle\\r\\n            }\\r\\n           
    this.selectedToggle = toggle; // Save the new selected toggle\\r\\n        }\\r\\n       
    else {\\r\\n            // If the same toggle is selected again\\r\\n           
    this.selectedToggle = null; // Deselect the current toggle\\r\\n        }\\r\\n   
    }\\r\\n    EquipCharacter(cardData) {\\r\\n        // Find an empty card equip
    slot\\r\\n        let emptyIndex = -1;\\r\\n        for (let i = 0; i < this.equipSlots.length;
    i++) {\\r\\n            if (!this.equipSlots[i].IsEquip() &&\\r\\n               
    !this.equipSlots[i].IsLocked()) {\\r\\n                emptyIndex = i;\\r\\n               
    break;\\r\\n            }\\r\\n        }\\r\\n        if (emptyIndex != -1) {\\r\\n           
    // Equip the character to the first empty card equip slot\\r\\n            this.equipSlots[emptyIndex].EquipCard(cardData,
    emptyIndex);\\r\\n            SoundManager_1.default.GetInstance().OnPlaySFX(SoundManager_1.default.GetInstance().keyBtnEquip);\\r\\n       
    }\\r\\n        else {\\r\\n            UIManager_1.default.GetInstance().OpenInformation(\\\"No
    slots available.\\\");\\r\\n            SoundManager_1.default.GetInstance().OnPlaySFX(\\\"Tresh\\\");\\r\\n       
    }\\r\\n    }\\r\\n    EquipUnlock(level) {\\r\\n        for (let i = 0; i < level;
    i++) {\\r\\n            this.equipSlots[i].Unlock();\\r\\n        }\\r\\n   
    }\\r\\n    // Checks if all equipment slots are selected.\\r\\n    CheckSlots()
    {\\r\\n        for (let i = 0; i < this.equipSlots.length; i++) {\\r\\n           
    // Check only unlocked slots,\\r\\n            // If any equipped slot is not
    selected, return false.\\r\\n            if (!this.equipSlots[i].IsLocked() &&\\r\\n               
    this.equipSlots[i].IsEquip() &&\\r\\n                !this.equipSlots[i].IsSelected())
    {\\r\\n                return false;\\r\\n            }\\r\\n        }\\r\\n       
    // If all unlocked slots are selected, return true.\\r\\n        return true;\\r\\n   
    }\\r\\n    IsEmpty() {\\r\\n        for (let i = 0; i < this.equipSlots.length;
    i++) {\\r\\n            if (!this.equipSlots[i].IsLocked() &&\\r\\n               
    !this.equipSlots[i].IsEquip() &&\\r\\n                !this.equipSlots[i].IsSelected())
    {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n       
    return false;\\r\\n    }\\r\\n    ClearSlots() {\\r\\n        for (let i = 0;
    i < this.equipSlots.length; i++) {\\r\\n            let slot = this.equipSlots[i];\\r\\n           
    slot.InitSlot();\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.default = EquipSlotController;\\r\\n//#
    sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXF1aXBTbG90Q29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkVxdWlwU2xvdENvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBcUQ7QUFDckQsNkNBQWlEO0FBRWpELDJDQUFvQztBQUNwQyx5Q0FBa0M7QUFDbEMsZ0RBQXlDO0FBQ3pDLDRDQUFxQztBQUNyQyxrREFBMkM7QUFDM0MsdURBQTJFO0FBQzNFLGdEQUF5QztBQUN6Qyx1REFBZ0Q7QUFFaEQsTUFBcUIsbUJBQW9CLFNBQVEscUNBQXFCO0lBQXRFOztRQUVZLGVBQVUsR0FBZ0IsRUFBRSxDQUFDO0lBd0l6QyxDQUFDO0lBcklHLEtBQUs7UUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsdUJBQXVCLFNBQUMsbUJBQVMsRUFBRyxDQUFDO1FBQzVFLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM3QyxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLDBCQUEwQixFQUFFLENBQUM7WUFDN0QsTUFBTSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtnQkFDdkMsSUFBSSxJQUFJLEVBQUU7b0JBQ04sSUFBSSxDQUFDLG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxDQUFDO2lCQUNyQztZQUNMLENBQUMsQ0FBQyxDQUFDO1NBQ047UUFFRCxNQUFNLGFBQWEsR0FBRyxxQkFBVyxDQUFDLFdBQVcsRUFBRSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFaEMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBRWxCLGVBQWU7UUFDZixzQ0FBc0M7UUFD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\",\"assetPath\":\"Assets/Scripts/Employee/EquipSlotController.ts\",\"manifest\":{\"properties\":[{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"equipSlotParent\",\"type\":\"UnityEngine.GameObject\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]}],\"name\":\"EquipSlotController\",\"description\":\"\"},\"isCompiled\":true}"
  typescriptHash: 633d8e66e8ce21a1a38a7c416a9bea22
  onlyWriteTrigger: 0
