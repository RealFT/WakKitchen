fileFormatVersion: 2
guid: 98ca602668a519840a0407922b8a25ec
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: "{\"source\":\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports,
    \\\"__esModule\\\", { value: true });\\r\\nconst ZEPETO_Script_1 = require(\\\"ZEPETO.Script\\\");\\r\\nconst
    UnityEngine_1 = require(\\\"UnityEngine\\\");\\r\\nconst EquipSlot_1 = require(\\\"./EquipSlot\\\");\\r\\nconst
    CardData_1 = require(\\\"./CardData\\\");\\r\\nconst ItemManager_1 = require(\\\"../ItemManager\\\");\\r\\nconst
    UIManager_1 = require(\\\"../UIManager\\\");\\r\\nconst SoundManager_1 = require(\\\"../SoundManager\\\");\\r\\nconst
    Mediator_1 = require(\\\"../Notification/Mediator\\\");\\r\\nconst DataManager_1
    = require(\\\"../DataManager\\\");\\r\\nclass EquipSlotController extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\\r\\n    constructor() {\\r\\n        super(...arguments);\\r\\n        this.equipSlots
    = [];\\r\\n    }\\r\\n    Start() {\\r\\n        this.equipSlots = this.equipSlotParent.GetComponentsInChildren($typeof(EquipSlot_1.default));\\r\\n       
    for (let i = 0; i < this.equipSlots.length; i++) {\\r\\n            let toggle
    = this.equipSlots[i].GetSelectSectionOpenToggle();\\r\\n            toggle.onValueChanged.AddListener((isOn)
    => {\\r\\n                if (isOn) {\\r\\n                    this.OnToggleValueChanged(toggle);\\r\\n               
    }\\r\\n            });\\r\\n        }\\r\\n        const upgradedlevel = ItemManager_1.default.GetInstance().GetUpgradedLevel(\\\"employee\\\");\\r\\n       
    this.EquipUnlock(upgradedlevel);\\r\\n        Mediator_1.default.GetInstance().RegisterListener(this);\\r\\n   
    }\\r\\n    OnDestroy() {\\r\\n        Mediator_1.default.GetInstance().UnregisterListener(this);\\r\\n   
    }\\r\\n    OnNotify(sender, eventName, eventData) {\\r\\n        switch (eventName)
    {\\r\\n            case Mediator_1.EventNames.UpgradeUpdated:\\r\\n               
    const upgradedLevel = ItemManager_1.default.GetInstance().GetUpgradedLevel(\\\"employee\\\");\\r\\n               
    this.EquipUnlock(upgradedLevel);\\r\\n                break;\\r\\n           
    case Mediator_1.EventNames.StageEnded:\\r\\n                this.ClearSlots();\\r\\n               
    break;\\r\\n            default:\\r\\n                // In case an unhandled
    event occurs\\r\\n                break;\\r\\n        }\\r\\n    }\\r\\n    //
    \uB2E4\uB978 \uC7A5\uCC29 \uCE90\uB9AD\uD130\uC758 \uC139\uC158 \uC120\uD0DD
    \uC2DC \uB2E4\uB978 \uC139\uC158\uC740 \uBE44\uD65C\uC131\uD654\uB418\uB294 \uAE30\uB2A5\\r\\n   
    OnToggleValueChanged(toggle) {\\r\\n        if (toggle != this.selectedToggle)
    {\\r\\n            // If a different toggle is selected\\r\\n            if (this.selectedToggle)
    {\\r\\n                this.selectedToggle.isOn = false; // Deselect the previously
    selected toggle\\r\\n            }\\r\\n            this.selectedToggle = toggle;
    // Save the new selected toggle\\r\\n        }\\r\\n        else {\\r\\n           
    // If the same toggle is selected again\\r\\n            this.selectedToggle
    = null; // Deselect the current toggle\\r\\n        }\\r\\n    }\\r\\n    EquipCharacter(cardData)
    {\\r\\n        // Find an empty card equip slot\\r\\n        let emptyIndex =
    -1;\\r\\n        for (let i = 0; i < this.equipSlots.length; i++) {\\r\\n           
    if (!this.equipSlots[i].IsEquip()) {\\r\\n                emptyIndex = i;\\r\\n               
    break;\\r\\n            }\\r\\n        }\\r\\n        if (emptyIndex != -1) {\\r\\n           
    // Equip the character to the first empty card equip slot\\r\\n            this.equipSlots[emptyIndex].EquipCard(cardData,
    emptyIndex);\\r\\n            SoundManager_1.default.GetInstance().OnPlaySFX(SoundManager_1.default.GetInstance().keyBtnEquip);\\r\\n       
    }\\r\\n        else {\\r\\n            UIManager_1.default.GetInstance().OpenInformation(\\\"No
    slots available.\\\");\\r\\n            SoundManager_1.default.GetInstance().OnPlaySFX(\\\"Tresh\\\");\\r\\n       
    }\\r\\n    }\\r\\n    EquipUnlock(level) {\\r\\n        for (let i = 0; i < level;
    i++) {\\r\\n            this.equipSlots[i].Unlock();\\r\\n        }\\r\\n   
    }\\r\\n    // Checks if all equipment slots are selected.\\r\\n    CheckSlots()
    {\\r\\n        for (let i = 0; i < this.equipSlots.length; i++) {\\r\\n           
    // Check only unlocked slots,\\r\\n            // If any equipped slot is not
    selected, return false.\\r\\n            if (!this.equipSlots[i].IsLocked() &&\\r\\n               
    this.equipSlots[i].IsEquip() &&\\r\\n                !this.equipSlots[i].IsSelected())
    {\\r\\n                return false;\\r\\n            }\\r\\n        }\\r\\n       
    // If all unlocked slots are selected, return true.\\r\\n        return true;\\r\\n   
    }\\r\\n    IsEmpty() {\\r\\n        for (let i = 0; i < this.equipSlots.length;
    i++) {\\r\\n            if (!this.equipSlots[i].IsLocked() &&\\r\\n               
    !this.equipSlots[i].IsEquip() &&\\r\\n                !this.equipSlots[i].IsSelected())
    {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n       
    return false;\\r\\n    }\\r\\n    ClearSlots() {\\r\\n        for (let i = 0;
    i < this.equipSlots.length; i++) {\\r\\n            this.equipSlots[i].InitSlot();\\r\\n       
    }\\r\\n    }\\r\\n}\\r\\nexports.default = EquipSlotController;\\r\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXF1aXBTbG90Q29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkVxdWlwU2xvdENvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBcUQ7QUFDckQsNkNBQWlEO0FBRWpELDJDQUFvQztBQUNwQyx5Q0FBa0M7QUFDbEMsZ0RBQXlDO0FBQ3pDLDRDQUFxQztBQUNyQyxrREFBMkM7QUFDM0MsdURBQTJFO0FBQzNFLGdEQUF5QztBQUV6QyxNQUFxQixtQkFBb0IsU0FBUSxxQ0FBcUI7SUFBdEU7O1FBR1ksZUFBVSxHQUFnQixFQUFFLENBQUM7SUE2R3pDLENBQUM7SUExR0csS0FBSztRQUNELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyx1QkFBdUIsU0FBQyxtQkFBUyxFQUFHLENBQUM7UUFDNUUsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzdDLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsMEJBQTBCLEVBQUUsQ0FBQztZQUM3RCxNQUFNLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO2dCQUN2QyxJQUFJLElBQUksRUFBRTtvQkFDTixJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQ3JDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7U0FDTjtRQUVELE1BQU0sYUFBYSxHQUFHLHFCQUFXLENBQUMsV0FBVyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDN0UsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNoQyxrQkFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xELENBQUM7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\",\"assetPath\":\"Assets/Scripts/Employee/EquipSlotController.ts\",\"manifest\":{\"properties\":[{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"equipSlotParent\",\"type\":\"UnityEngine.GameObject\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]}],\"name\":\"EquipSlotController\",\"description\":\"\"},\"isCompiled\":true}"
  typescriptHash: b80e0dce908142208e1bf928a70df02b
  onlyWriteTrigger: 0
