fileFormatVersion: 2
guid: a05551fcb4f9af7408e43118c9345980
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_UI_1 = require(\"UnityEngine.UI\");\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    CardSlot_1 = require(\"./CardSlot\");\r\nconst DataManager_1 = require(\"../DataManager\");\r\nconst
    EquipSlotController_1 = require(\"./EquipSlotController\");\r\nconst CardInfoWindow_1
    = require(\"./CardInfoWindow\");\r\nconst UIManager_1 = require(\"../UIManager\");\r\nclass
    CardInventory extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor()
    {\r\n        super(...arguments);\r\n        this.cardSlots = [];\r\n    }\r\n   
    Start() {\r\n        this.Init();\r\n        this.CreateInventory();\r\n    }\r\n   
    OnEnable() {\r\n        this.RefreshInventoryUI();\r\n        //this.RefreshCardInfo();\r\n   
    }\r\n    Init() {\r\n        this.equipSlotController = this.equipSlotControllerObj.GetComponent($typeof(EquipSlotController_1.default));\r\n       
    this.cardInfoWindow = this.cardInfoWindowObj.GetComponent($typeof(CardInfoWindow_1.default));\r\n       
    this.toggleGroup = this.contentParent.GetComponent($typeof(UnityEngine_UI_1.ToggleGroup));\r\n       
    this.equipBtn.onClick.AddListener(() => this.OnClickEquipCard());\r\n       
    this.upgradeBtn.onClick.AddListener(() => this.OnClickUpgradeCard());\r\n       
    this.cardInfoWindow.InitCardInfoWindow();\r\n    }\r\n    RefreshInventoryUI()
    {\r\n        const existingIds = [];\r\n        const inventoryCache = DataManager_1.default.GetInstance().GetInventoryCache();\r\n       
    console.log(inventoryCache);\r\n        // Update existing slots\r\n        this.cardSlots.forEach((cardSlot)
    => {\r\n            const cardId = cardSlot.GetCardData()?.GetCardId();\r\n           
    if (cardId) {\r\n                const quantity = inventoryCache.get(cardId)
    || 0;\r\n                if (quantity > 0) {\r\n                    cardSlot.RefreshItem(quantity);\r\n                   
    existingIds.push(cardId);\r\n                }\r\n                else {\r\n                   
    cardSlot.ClearSlot();\r\n                    cardSlot.gameObject.SetActive(false);\r\n               
    }\r\n            }\r\n            else {\r\n                cardSlot.gameObject.SetActive(false);\r\n           
    }\r\n        });\r\n        // Add new slots for cards that were not already
    displayed\r\n        for (const [id, quantity] of inventoryCache) {\r\n           
    if (!existingIds.includes(id) && quantity > 0) {\r\n                this.CreateSlot(id,
    quantity);\r\n            }\r\n        }\r\n    }\r\n    RefreshCardInfo() {\r\n       
    console.warn(\"RefreshCardInfo\");\r\n        if (this.toggleGroup == null)\r\n           
    this.toggleGroup = this.contentParent.GetComponent($typeof(UnityEngine_UI_1.ToggleGroup));\r\n       
    const card = this.toggleGroup.GetFirstActiveToggle()?.GetComponent($typeof(CardSlot_1.default))?.GetCardData();\r\n       
    if (card)\r\n            this.cardInfoWindow.SetCardInfoWindow(card);\r\n   
    }\r\n    CreateInventory() {\r\n        this.cardSlots = [];\r\n        const
    remains = this.contentParent.gameObject.GetComponentsInChildren($typeof(CardSlot_1.default));\r\n       
    remains.forEach((slot) => {\r\n            console.log(slot.gameObject);\r\n           
    UnityEngine_1.GameObject.Destroy(slot.gameObject);\r\n        });\r\n       
    /*Sort by Create Order (descending order)*/\r\n        const inventoryCache =
    DataManager_1.default.GetInstance().GetInventoryCache();\r\n        for (const
    [id, quantity] of inventoryCache) {\r\n            if (quantity > 0)\r\n               
    this.CreateSlot(id, quantity);\r\n        }\r\n        // Update the size of
    the content to fit the number of slots\r\n        const layoutGroup = this.contentParent.GetComponent($typeof(UnityEngine_UI_1.GridLayoutGroup));\r\n       
    const cellSize = layoutGroup.cellSize;\r\n        const spacing = layoutGroup.spacing;\r\n       
    const constraintCount = layoutGroup.constraintCount;\r\n        const rowCount
    = Math.ceil(this.cardSlots.length / constraintCount);\r\n        // Cast contentParent
    to RectTransform\r\n        const contentRectTransform = this.contentParent.transform;\r\n       
    const newContentSize = new UnityEngine_1.Vector2(contentRectTransform.sizeDelta.x,
    (rowCount + 1) * (cellSize.y + spacing.y));\r\n        contentRectTransform.sizeDelta
    = newContentSize;\r\n    }\r\n    CreateSlot(id, quantity) {\r\n        let slot;\r\n       
    const inactiveSlotIndex = this.cardSlots.findIndex(s => !s.gameObject.activeSelf);\r\n       
    if (inactiveSlotIndex !== -1) { // reuse inactive slot\r\n            slot =
    this.cardSlots[inactiveSlotIndex];\r\n            slot.gameObject.SetActive(true);\r\n       
    }\r\n        else { // instantiate new slot\r\n            const cardObj = UnityEngine_1.Object.Instantiate(this.cardSlotPrefab,
    this.contentParent);\r\n            slot = cardObj.GetComponent($typeof(CardSlot_1.default));\r\n           
    const toggle = cardObj.GetComponent($typeof(UnityEngine_UI_1.Toggle));\r\n           
    toggle.group = this.toggleGroup;\r\n            toggle.onValueChanged.AddListener(()
    => {\r\n                if (toggle.isOn) {\r\n                    this.RefreshCardInfo();\r\n               
    }\r\n            });\r\n            this.cardSlots.push(slot);\r\n        }\r\n       
    const cardData = DataManager_1.default.GetInstance().GetCardData(id);\r\n       
    slot.SetSlot(cardData, quantity);\r\n        //slot.IsOn(false);\r\n    }\r\n   
    OnClickEquipCard() {\r\n        const card = this.toggleGroup.GetFirstActiveToggle()?.GetComponent($typeof(CardSlot_1.default)).GetCardData();\r\n       
    if (card == undefined) {\r\n            UIManager_1.default.GetInstance().OpenInformation(\"No
    card selected.\");\r\n            return;\r\n        }\r\n        this.equipSlotController.EquipCharacter(card);\r\n       
    this.RefreshCardInfo();\r\n    }\r\n    OnClickUpgradeCard() {\r\n        const
    cardSlot = this.toggleGroup.GetFirstActiveToggle()?.GetComponent($typeof(CardSlot_1.default));\r\n       
    if (!cardSlot || cardSlot.GetCardQuantity() < 10) {\r\n            UIManager_1.default.GetInstance().OpenInformation(\"Not
    enough cards to Upgrade\");\r\n            return;\r\n        }\r\n        const
    card = cardSlot.GetCardData();\r\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Equality(card,
    null)) {\r\n            return;\r\n        }\r\n        const grade = card.GetGrade();\r\n       
    console.log(grade);\r\n        if (grade == \"s\") {\r\n            console.warn(\"already
    fully upgraded\");\r\n            return;\r\n        }\r\n        let upperGrade
    = \"c\";\r\n        switch (grade) {\r\n            case \"d\":\r\n               
    upperGrade = \"c\";\r\n                break;\r\n            case \"c\":\r\n               
    upperGrade = \"b\";\r\n                break;\r\n            case \"b\":\r\n               
    upperGrade = \"a\";\r\n                break;\r\n            case \"a\":\r\n               
    upperGrade = \"s\";\r\n                break;\r\n        }\r\n        const resultCard
    = DataManager_1.default.GetInstance().GetRandomCardByGrade(upperGrade);\r\n       
    DataManager_1.default.GetInstance().UseCard(card.GetCardId(), 10);\r\n       
    DataManager_1.default.GetInstance().AddCard(resultCard.GetCardId());\r\n       
    this.RefreshInventoryUI();\r\n    }\r\n}\r\nexports.default = CardInventory;\r\n//#
    sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FyZEludmVudG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNhcmRJbnZlbnRvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBbUQ7QUFDbkQsbURBQTZFO0FBQzdFLDZDQUFtRjtBQUluRix5Q0FBa0M7QUFDbEMsZ0RBQXlDO0FBQ3pDLCtEQUF3RDtBQUN4RCxxREFBOEM7QUFDOUMsNENBQXFDO0FBRXJDLE1BQXFCLGFBQWMsU0FBUSxxQ0FBcUI7SUFBaEU7O1FBVVksY0FBUyxHQUFlLEVBQUUsQ0FBQztJQWtLdkMsQ0FBQztJQS9KRyxLQUFLO1FBQ0QsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ1osSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTyxRQUFRO1FBQ1osSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7UUFDMUIseUJBQXlCO0lBQzdCLENBQUM7SUFFTyxJQUFJO1FBQ1IsSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxZQUFZLFNBQUMsNkJBQW1CLEVBQUcsQ0FBQztRQUMzRixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxZQUFZLFNBQUMsd0JBQWMsRUFBRyxDQUFDO1FBQzVFLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLFNBQUMsNEJBQVcsRUFBRyxDQUFDO1FBRWxFLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxHQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxHQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDO1FBRXBFLElBQUksQ0FBQyxjQUFjLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUM3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","assetPath":"Assets/Scripts/Employee/CardInventory.ts","manifest":{"properties":[{"assembly":"UnityEngine.UI","name":"equipBtn","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"upgradeBtn","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"contentParent","type":"UnityEngine.Transform","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"equipSlotControllerObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"cardInfoWindowObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"cardSlotPrefab","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]}],"name":"CardInventory","description":""},"isCompiled":true}'
  typescriptHash: de248a0d64637c677b4e4d5ec8af0870
  onlyWriteTrigger: 0
