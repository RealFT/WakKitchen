fileFormatVersion: 2
guid: a05551fcb4f9af7408e43118c9345980
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_UI_1 = require(\"UnityEngine.UI\");\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    CardSlot_1 = require(\"./CardSlot\");\r\nconst DataManager_1 = require(\"../DataManager\");\r\nconst
    EquipSlotController_1 = require(\"./EquipSlotController\");\r\nconst CardInfoWindow_1
    = require(\"./CardInfoWindow\");\r\nconst UIManager_1 = require(\"../UIManager\");\r\nconst
    SoundManager_1 = require(\"../SoundManager\");\r\nconst Mediator_1 = require(\"../Notification/Mediator\");\r\nclass
    CardInventory extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor()
    {\r\n        super(...arguments);\r\n        this.cardSlots = [];\r\n    }\r\n   
    Start() {\r\n        this.Init();\r\n        this.CreateInventory();\r\n       
    Mediator_1.default.GetInstance().RegisterListener(this);\r\n    }\r\n    OnDestroy()
    {\r\n        Mediator_1.default.GetInstance().UnregisterListener(this);\r\n   
    }\r\n    OnEnable() {\r\n        this.RefreshInventoryUI();\r\n        //this.RefreshCardInfo();\r\n   
    }\r\n    OnNotify(sender, eventName, eventData) {\r\n        if (!this.gameObject.activeSelf)\r\n           
    return;\r\n        if (eventName == Mediator_1.EventNames.InventoryUpdated) {\r\n           
    this.RefreshInventoryUI();\r\n        }\r\n    }\r\n    Init() {\r\n        this.equipSlotController
    = this.equipSlotControllerObj.GetComponent($typeof(EquipSlotController_1.default));\r\n       
    this.cardInfoWindow = this.cardInfoWindowObj.GetComponent($typeof(CardInfoWindow_1.default));\r\n       
    this.toggleGroup = this.contentParent.GetComponent($typeof(UnityEngine_UI_1.ToggleGroup));\r\n       
    this.equipBtn.onClick.AddListener(() => this.OnClickEquipCard());\r\n       
    this.upgradeBtn.onClick.AddListener(() => this.OnClickUpgradeCard());\r\n       
    this.cardInfoWindow.InitCardInfoWindow();\r\n    }\r\n    RefreshInventoryUI()
    {\r\n        const existingIds = [];\r\n        const inventoryCache = DataManager_1.default.GetInstance().GetInventoryCache();\r\n       
    // Update existing slots\r\n        this.cardSlots.forEach((cardSlot) => {\r\n           
    const cardId = cardSlot.GetCardData()?.GetCardId();\r\n            if (cardId)
    {\r\n                const quantity = inventoryCache.get(cardId) || 0;\r\n               
    if (quantity > 0) {\r\n                    cardSlot.RefreshItem(quantity);\r\n                   
    existingIds.push(cardId);\r\n                }\r\n                else {\r\n                   
    cardSlot.ClearSlot();\r\n                    cardSlot.gameObject.SetActive(false);\r\n               
    }\r\n            }\r\n            else {\r\n                cardSlot.gameObject.SetActive(false);\r\n           
    }\r\n        });\r\n        // Add new slots for cards that were not already
    displayed\r\n        for (const [id, quantity] of inventoryCache) {\r\n           
    if (!existingIds.includes(id) && quantity > 0) {\r\n                this.CreateSlot(id,
    quantity);\r\n            }\r\n        }\r\n    }\r\n    RefreshCardInfo() {\r\n       
    console.warn(\"RefreshCardInfo\");\r\n        if (this.toggleGroup == null)\r\n           
    this.toggleGroup = this.contentParent.GetComponent($typeof(UnityEngine_UI_1.ToggleGroup));\r\n       
    const card = this.toggleGroup.GetFirstActiveToggle()?.GetComponent($typeof(CardSlot_1.default))?.GetCardData();\r\n       
    if (card)\r\n            this.cardInfoWindow.SetCardInfoWindow(card);\r\n   
    }\r\n    CreateInventory() {\r\n        this.cardSlots = [];\r\n        const
    remains = this.contentParent.gameObject.GetComponentsInChildren($typeof(CardSlot_1.default));\r\n       
    remains.forEach((slot) => {\r\n            console.log(slot.gameObject);\r\n           
    UnityEngine_1.GameObject.Destroy(slot.gameObject);\r\n        });\r\n       
    /*Sort by Create Order (descending order)*/\r\n        const inventoryCache =
    DataManager_1.default.GetInstance().GetInventoryCache();\r\n        for (const
    [id, quantity] of inventoryCache) {\r\n            if (quantity > 0)\r\n               
    this.CreateSlot(id, quantity);\r\n        }\r\n        // Update the size of
    the content to fit the number of slots\r\n        const layoutGroup = this.contentParent.GetComponent($typeof(UnityEngine_UI_1.GridLayoutGroup));\r\n       
    const cellSize = layoutGroup.cellSize;\r\n        const spacing = layoutGroup.spacing;\r\n       
    const constraintCount = layoutGroup.constraintCount;\r\n        const rowCount
    = Math.ceil(this.cardSlots.length / constraintCount);\r\n        // Cast contentParent
    to RectTransform\r\n        const contentRectTransform = this.contentParent.transform;\r\n       
    const newContentSize = new UnityEngine_1.Vector2(contentRectTransform.sizeDelta.x,
    (rowCount + 1) * (cellSize.y + spacing.y));\r\n        contentRectTransform.sizeDelta
    = newContentSize;\r\n    }\r\n    CreateSlot(id, quantity) {\r\n        let slot;\r\n       
    const inactiveSlotIndex = this.cardSlots.findIndex(s => !s.gameObject.activeSelf);\r\n       
    if (inactiveSlotIndex !== -1) { // reuse inactive slot\r\n            slot =
    this.cardSlots[inactiveSlotIndex];\r\n            slot.gameObject.SetActive(true);\r\n       
    }\r\n        else { // instantiate new slot\r\n            const cardObj = UnityEngine_1.Object.Instantiate(this.cardSlotPrefab,
    this.contentParent);\r\n            slot = cardObj.GetComponent($typeof(CardSlot_1.default));\r\n           
    const toggle = cardObj.GetComponent($typeof(UnityEngine_UI_1.Toggle));\r\n           
    toggle.group = this.toggleGroup;\r\n            toggle.onValueChanged.AddListener(()
    => {\r\n                if (toggle.isOn) {\r\n                    this.RefreshCardInfo();\r\n               
    }\r\n            });\r\n            this.cardSlots.push(slot);\r\n        }\r\n       
    const cardData = DataManager_1.default.GetInstance().GetCardData(id);\r\n       
    slot.SetSlot(cardData, quantity);\r\n        //slot.IsOn(false);\r\n    }\r\n   
    OnClickEquipCard() {\r\n        const card = this.toggleGroup.GetFirstActiveToggle()?.GetComponent($typeof(CardSlot_1.default)).GetCardData();\r\n       
    if (card == undefined) {\r\n            UIManager_1.default.GetInstance().OpenInformation(\"No
    card selected.\");\r\n            SoundManager_1.default.GetInstance().OnPlaySFX(\"Tresh\");\r\n           
    return;\r\n        }\r\n        else {\r\n            SoundManager_1.default.GetInstance().OnPlaySFX(SoundManager_1.default.GetInstance().keyBtnEquip);\r\n           
    this.equipSlotController.EquipCharacter(card);\r\n            this.RefreshInventoryUI();\r\n       
    }\r\n    }\r\n    OnClickUpgradeCard() {\r\n        const cardSlot = this.toggleGroup.GetFirstActiveToggle()?.GetComponent($typeof(CardSlot_1.default));\r\n       
    if (!cardSlot || cardSlot.GetCardQuantity() < 10) {\r\n            UIManager_1.default.GetInstance().OpenInformation(\"Not
    enough cards to Upgrade\");\r\n            SoundManager_1.default.GetInstance().OnPlaySFX(\"Tresh\");\r\n           
    return;\r\n        }\r\n        const card = cardSlot.GetCardData();\r\n       
    if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Equality(card, null)) {\r\n           
    return;\r\n        }\r\n        const grade = card.GetGrade();\r\n        console.log(grade);\r\n       
    if (grade == \"s\") {\r\n            console.warn(\"already fully upgraded\");\r\n           
    return;\r\n        }\r\n        let upperGrade = \"c\";\r\n        switch (grade)
    {\r\n            case \"d\":\r\n                upperGrade = \"c\";\r\n               
    break;\r\n            case \"c\":\r\n                upperGrade = \"b\";\r\n               
    break;\r\n            case \"b\":\r\n                upperGrade = \"a\";\r\n               
    break;\r\n            case \"a\":\r\n                upperGrade = \"s\";\r\n               
    break;\r\n        }\r\n        const resultCard = DataManager_1.default.GetInstance().GetRandomCardByGrade(upperGrade);\r\n       
    DataManager_1.default.GetInstance().UseCard(card.GetCardId(), 10);\r\n       
    DataManager_1.default.GetInstance().AddCard(resultCard.GetCardId());\r\n       
    SoundManager_1.default.GetInstance().OnPlaySFX(\"Card_Upgrade\");\r\n       
    this.RefreshInventoryUI();\r\n    }\r\n}\r\nexports.default = CardInventory;\r\n//#
    sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FyZEludmVudG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNhcmRJbnZlbnRvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBbUQ7QUFDbkQsbURBQTZFO0FBQzdFLDZDQUFtRjtBQUluRix5Q0FBa0M7QUFDbEMsZ0RBQXlDO0FBQ3pDLCtEQUF3RDtBQUN4RCxxREFBOEM7QUFDOUMsNENBQXFDO0FBQ3JDLGtEQUEyQztBQUMzQyx1REFBMkU7QUFFM0UsTUFBcUIsYUFBYyxTQUFRLHFDQUFxQjtJQUFoRTs7UUFVWSxjQUFTLEdBQWUsRUFBRSxDQUFDO0lBb0x2QyxDQUFDO0lBakxHLEtBQUs7UUFDRCxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDWixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdkIsa0JBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRU8sU0FBUztRQUNiLGtCQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVPLFFBQVE7UUFDWixJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztRQUMxQix5QkFBeUI7SUFDN0IsQ0FBQztJQUVNLFFBQVEsQ0FBQyxNQUFXLEVBQUUsU0FBaUIsRUFBRSxTQUFjO1FBQzFELElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVU7WUFBRSxPQUFPO1FBQ3hDLElBQUksU0FBUyxJQUFJLHFCQUFVLENBQUMsZ0JBQWdCLEVBQUU7WUFDMUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7U0FDN0I7SUFDTCxDQUFDO0lBRU8sSUFBSTtRQUNSLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsc0JBQXNCLENBQUMsWUFBWSxTQUFDLDZCQUFtQixFQUFHLENBQUM7UUFDM0YsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJ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","assetPath":"Assets/Scripts/Employee/CardInventory.ts","manifest":{"properties":[{"assembly":"UnityEngine.UI","name":"equipBtn","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"upgradeBtn","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"contentParent","type":"UnityEngine.Transform","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"equipSlotControllerObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"cardInfoWindowObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"cardSlotPrefab","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]}],"name":"CardInventory","description":""},"isCompiled":true}'
  typescriptHash: cad7c6a8e9a78254aef3a9f11f9f08b1
  onlyWriteTrigger: 0
