fileFormatVersion: 2
guid: bb1445786a3e125498a423199d7c4271
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: "{\"source\":\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports,
    \\\"__esModule\\\", { value: true });\\r\\nexports.SceneName = void 0;\\r\\nconst
    UnityEngine_SceneManagement_1 = require(\\\"UnityEngine.SceneManagement\\\");\\r\\nconst
    ZEPETO_Script_1 = require(\\\"ZEPETO.Script\\\");\\r\\nconst UnityEngine_1 =
    require(\\\"UnityEngine\\\");\\r\\nconst GameManager_1 = require(\\\"./GameManager\\\");\\r\\nconst
    OrderManager_1 = require(\\\"./OrderManager\\\");\\r\\nconst UIManager_1 = require(\\\"./UIManager\\\");\\r\\nconst
    SoundManager_1 = require(\\\"./SoundManager\\\");\\r\\nconst HelpManager_1 =
    require(\\\"./Help/HelpManager\\\");\\r\\nconst DataManager_1 = require(\\\"./DataManager\\\");\\r\\nvar
    SceneName;\\r\\n(function (SceneName) {\\r\\n    SceneName[\\\"Main\\\"] = \\\"00_Main\\\";\\r\\n   
    SceneName[\\\"Stage\\\"] = \\\"01_Stage\\\";\\r\\n    SceneName[\\\"Shop\\\"]
    = \\\"02_Shop\\\";\\r\\n})(SceneName = exports.SceneName || (exports.SceneName
    = {}));\\r\\nclass SceneLoadManager extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\\r\\n    constructor() {\\r\\n        super(...arguments);\\r\\n        this.inverseNum
    = 1 / 0.9;\\r\\n    }\\r\\n    static GetInstance() {\\r\\n        if (!SceneLoadManager.Instance)
    {\\r\\n            var _obj = UnityEngine_1.GameObject.Find(\\\"SceneLoadManager\\\");\\r\\n           
    if (!_obj) {\\r\\n                _obj = new UnityEngine_1.GameObject(\\\"SceneLoadManager\\\");\\r\\n               
    _obj.AddComponent($typeof(SceneLoadManager));\\r\\n            }\\r\\n           
    SceneLoadManager.Instance = _obj.GetComponent($typeof(SceneLoadManager));\\r\\n           
    UnityEngine_1.GameObject.DontDestroyOnLoad(_obj);\\r\\n        }\\r\\n       
    return SceneLoadManager.Instance;\\r\\n    }\\r\\n    Awake() {\\r\\n       
    if (this != SceneLoadManager.GetInstance())\\r\\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\\r\\n   
    }\\r\\n    Start() {\\r\\n        this.loadingScreen.SetActive(false);\\r\\n       
    this.currentScene = SceneName.Main;\\r\\n    }\\r\\n    // Load the specified
    scene\\r\\n    LoadScene(sceneName) {\\r\\n        // Show the loading screen\\r\\n       
    this.loadingScreen.SetActive(true);\\r\\n        // Load the specified scene
    asynchronously\\r\\n        this.StartCoroutine(this.LoadSceneAsync(sceneName));\\r\\n   
    }\\r\\n    *LoadSceneAsync(sceneName) {\\r\\n        this.isCharacterLoaded =
    false;\\r\\n        // Create an AsyncOperation object to track the progress
    of the scene load\\r\\n        let asyncOperation = UnityEngine_SceneManagement_1.SceneManager.LoadSceneAsync(sceneName.toString());\\r\\n       
    let progress = 0;\\r\\n        // Wait until the scene is fully loaded\\r\\n       
    while (!asyncOperation.isDone) {\\r\\n            // Update the progress of the
    loading screen based on the progress of the AsyncOperation\\r\\n            //
    You can use this to update a loading bar or display a percentage\\r\\n           
    progress = UnityEngine_1.Mathf.Clamp01(asyncOperation.progress * this.inverseNum);\\r\\n           
    UnityEngine_1.Debug.Log(\\\"Loading progress: \\\" + progress);\\r\\n           
    this.loadingProgressBar.value = progress;\\r\\n            yield;\\r\\n       
    }\\r\\n        this.currentScene = sceneName;\\r\\n        switch (sceneName)
    {\\r\\n            case SceneName.Main:\\r\\n                SoundManager_1.default.GetInstance().OnPlayBGM(SoundManager_1.default.GetInstance().keyMain);\\r\\n               
    break;\\r\\n            case SceneName.Shop:\\r\\n                OrderManager_1.default.GetInstance().DisableOrder();\\r\\n               
    UIManager_1.default.GetInstance().DisableStageUI();\\r\\n                break;\\r\\n           
    case SceneName.Stage:\\r\\n                while (!this.isCharacterLoaded) {\\r\\n                   
    yield;\\r\\n                }\\r\\n                GameManager_1.default.GetInstance().InitStage();\\r\\n               
    //GameManager.GetInstance().NextStage();\\r\\n                // \uD604\uC7AC
    \uC2A4\uD14C\uC774\uC9C0\uC5D0 \uD574\uAE08\uB41C \uC139\uC158\uC774 \uC788\uB294\uC9C0
    \uCCB4\uD06C \uD6C4 \uD574\uB2F9\uD558\uB294 \uAC00\uC774\uB4DC \uD29C\uD1A0\uB9AC\uC5BC
    \uD65C\uC131\uD654\\r\\n                const curStage = GameManager_1.default.GetInstance().GetCurrentStage();\\r\\n               
    const unlockSection = DataManager_1.default.GetInstance().CheckUnlockByStage(curStage);\\r\\n               
    if (unlockSection != undefined) {\\r\\n                    HelpManager_1.default.GetInstance().GuideSection(unlockSection);\\r\\n               
    }\\r\\n                break;\\r\\n            default:\\r\\n               
    break;\\r\\n        }\\r\\n        // Hide the loading screen\\r\\n        this.loadingScreen.SetActive(false);\\r\\n   
    }\\r\\n    SetCharacterLoaded() {\\r\\n        this.isCharacterLoaded = true;\\r\\n   
    }\\r\\n    getCurrentScene() {\\r\\n        return this.currentScene;\\r\\n   
    }\\r\\n}\\r\\nexports.default = SceneLoadManager;\\r\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2NlbmVMb2FkTWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNjZW5lTG9hZE1hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkVBQTJEO0FBQzNELGlEQUFxRDtBQUVyRCw2Q0FBdUU7QUFDdkUsK0NBQXdDO0FBQ3hDLGlEQUEwQztBQUMxQywyQ0FBb0M7QUFDcEMsaURBQTBDO0FBQzFDLG9EQUE2QztBQUM3QywrQ0FBd0M7QUFFeEMsSUFBWSxTQUlYO0FBSkQsV0FBWSxTQUFTO0lBQ2pCLDZCQUFnQixDQUFBO0lBQ2hCLCtCQUFrQixDQUFBO0lBQ2xCLDZCQUFnQixDQUFBO0FBQ3BCLENBQUMsRUFKVyxTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQUlwQjtBQUVELE1BQXFCLGdCQUFpQixTQUFRLHFDQUFxQjtJQUFuRTs7UUFvQlksZUFBVSxHQUFXLENBQUMsR0FBRyxHQUFHLENBQUM7SUF3RXpDLENBQUM7SUF6RlUsTUFBTSxDQUFDLFdBQVc7UUFFckIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRTtZQUM1QixJQUFJLElBQUksR0FBRyx3QkFBVSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1lBQy9DLElBQUksQ0FBQyxJQUFJLEVBQUU7Z0JBQ1AsSUFBSSxHQUFHLElBQUksd0JBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO2dCQUMxQyxJQUFJLENBQUMsWUFBWSxTQUFDLGdCQUFnQixHQUFJO2FBQ3pDO1lBQ0QsZ0JBQWdCLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLFNBQUMsZ0JBQWdCLEVBQUcsQ0FBQztZQUNsRSx3QkFBVSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3RDO1FBQ0QsT0FBTyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUM7SUFDckMsQ0FBQztJQVNELEtBQUs7UUFDRCxJQUFJLElBQUksSUFBSSxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUU7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\",\"assetPath\":\"Assets/Scripts/SceneLoadManager.ts\",\"manifest\":{\"properties\":[{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"loadingScreen\",\"type\":\"UnityEngine.GameObject\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[]},{\"assembly\":\"UnityEngine.UI\",\"name\":\"loadingProgressBar\",\"type\":\"UnityEngine.UI.Slider\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[]}],\"name\":\"SceneLoadManager\",\"description\":\"\"},\"isCompiled\":true}"
  typescriptHash: a60d66c14729b177c0382c7140862528
  onlyWriteTrigger: 0
