fileFormatVersion: 2
guid: dbb56e05bf51f7242ae36f329ef7a6b2
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nclass SoundManager extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super(...arguments);\r\n        // Variables
    to store scene names\r\n        this.keyMain = ''Main''; // Main scene key\r\n       
    this.keyStage = ''Stage''; // Stage scene key\r\n        this.keyStageEnd = ''StageEnd'';
    // StageEnd scene key\r\n        this.keyShop = ''Shop''; // Shop scene key\r\n       
    this.keyCardSet = ''CardSet''; // CardSet scene key\r\n        this.keyBtnClick
    = ''Button_Click''; // CardSet scene key\r\n        this.keyBtnSelect = ''Button_Select'';
    // CardSet scene key\r\n        this.keyBtnEquip = ''Button_Equip''; // CardSet
    scene key\r\n        this.keySettlement = ''Settlement''; // CardSet scene key\r\n       
    // Map to store loaded audio clips for BGM and SFX\r\n        this.BGMMap = new
    Map();\r\n        this.SFXMap = new Map();\r\n        this.masterMute = false;
    // Master mute flag\r\n        this.masterVolume = 1; // Master volume level\r\n       
    this.SFXMute = false; // SFX mute flag\r\n        this.SFXVolume = 1; // SFX
    volume level\r\n        this.BGMMute = false; // BGM mute flag\r\n        this.BGMVolume
    = 1; // BGM volume level\r\n    }\r\n    static GetInstance() {\r\n        if
    (!SoundManager.Instance) {\r\n            var _obj = UnityEngine_1.GameObject.Find(\"SoundManager\");\r\n           
    if (!_obj) {\r\n                _obj = new UnityEngine_1.GameObject(\"SoundManager\");\r\n               
    _obj.AddComponent($typeof(SoundManager));\r\n            }\r\n            SoundManager.Instance
    = _obj.GetComponent($typeof(SoundManager));\r\n            UnityEngine_1.GameObject.DontDestroyOnLoad(_obj);\r\n       
    }\r\n        return SoundManager.Instance;\r\n    }\r\n    Awake() {\r\n       
    if (this != SoundManager.GetInstance())\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n       
    this.LoadAudio();\r\n    }\r\n    // Getter functions to retrieve the current
    state of sound settings\r\n    get SFXSoundMute() {\r\n        return this.masterMute
    || this.SFXMute;\r\n    }\r\n    get SFXSoundVolume() {\r\n        return this.SFXVolume
    * this.masterVolume;\r\n    }\r\n    get BGMSoundMute() {\r\n        return this.masterMute
    || this.BGMMute;\r\n    }\r\n    get BGMSoundVolume() {\r\n        return this.BGMVolume
    * this.masterVolume;\r\n    }\r\n    Start() {\r\n        this.muteBGM.onValueChanged.AddListener(()
    => this.MuteBGMVolume(this.muteBGM));\r\n        this.muteSFX.onValueChanged.AddListener(()
    => this.MuteSFXVolume(this.muteSFX));\r\n    }\r\n    // Functions to change
    the sound settings\r\n    ChangeMasterVolume(slider) {\r\n        this.masterVolume
    = slider.value;\r\n        this.ApplyBGMVolume();\r\n        this.ApplySFXVolume();\r\n   
    }\r\n    MuteMasterVolume(toggle) {\r\n        this.masterMute = toggle.isOn;\r\n       
    this.ApplyBGMVolume();\r\n        this.ApplySFXVolume();\r\n    }\r\n    ChangeSFXVolume(slider)
    {\r\n        this.SFXVolume = slider.value;\r\n        this.ApplySFXVolume();\r\n   
    }\r\n    MuteSFXVolume(toggle) {\r\n        this.SFXMute = toggle.isOn;\r\n       
    this.ApplySFXVolume();\r\n    }\r\n    ChangeBGMVolume(slider) {\r\n        this.BGMVolume
    = slider.value;\r\n        this.ApplyBGMVolume();\r\n    }\r\n    MuteBGMVolume(toggle)
    {\r\n        this.BGMMute = toggle.isOn;\r\n        this.ApplyBGMVolume();\r\n   
    }\r\n    LoadAudio() {\r\n        const bgmClips = UnityEngine_1.Resources.LoadAll(\"Sounds/BGM\");\r\n       
    const sfxClips = UnityEngine_1.Resources.LoadAll(\"Sounds/SFX\");\r\n       
    bgmClips.forEach((clip) => {\r\n            if (clip instanceof UnityEngine_1.AudioClip)
    {\r\n                this.BGMMap.set(clip.name, clip);\r\n            }\r\n       
    });\r\n        sfxClips.forEach((clip) => {\r\n            if (clip instanceof
    UnityEngine_1.AudioClip) {\r\n                this.SFXMap.set(clip.name, clip);\r\n           
    }\r\n            this.SFXMap.set(clip.name, clip);\r\n        });\r\n       
    this.BGM.loop = true;\r\n        this.SFX.loop = false;\r\n    }\r\n    ApplyBGMVolume()
    {\r\n        this.BGM.volume = this.BGMVolume;\r\n        this.BGM.mute = this.BGMMute;\r\n   
    }\r\n    ApplySFXVolume() {\r\n        this.SFX.volume = this.SFXVolume;\r\n       
    this.SFX.mute = this.SFXMute;\r\n        this.buttonSFX.volume = this.SFXVolume;\r\n       
    this.buttonSFX.mute = this.SFXMute;\r\n    }\r\n    OnPlayBGM(key) {\r\n       
    // Stop the currently playing music\r\n        this.BGM.Stop();\r\n        //
    If already playing, return\r\n        if (this.BGM.isPlaying)\r\n           
    return;\r\n        // Set the clip for the specified key\r\n        this.BGM.clip
    = this.BGMMap.get(key);\r\n        // Only play if music clip exists\r\n       
    if (!this.BGM.isPlaying)\r\n            this.BGM.Play();\r\n    }\r\n    OnPlayOnceBGM(key)
    {\r\n        // Stop the currently playing music\r\n        this.BGM.Stop();\r\n       
    // If already playing, return\r\n        if (this.BGM.isPlaying)\r\n           
    return;\r\n        // Set the clip for the specified key\r\n        const clip
    = this.BGMMap.get(key);\r\n        this.StartCoroutine(this.PlayOnce(clip));\r\n   
    }\r\n    *PlayOnce(clip) {\r\n        const preClip = this.BGM.clip;\r\n       
    this.BGM.clip = clip;\r\n        this.BGM.loop = false;\r\n        // Only play
    if music clip exists\r\n        if (!this.BGM.isPlaying)\r\n            this.BGM.Play();\r\n       
    // wait until play done.\r\n        while (this.BGM.isPlaying) {\r\n           
    yield null;\r\n        }\r\n        this.BGM.clip = preClip;\r\n        this.BGM.Play();\r\n   
    }\r\n    OnPlaySFX(clipName) {\r\n        if (this.SFX)\r\n            this.SFX.Stop();\r\n       
    if (this.SFX.isPlaying)\r\n            return;\r\n        // Set the clip for
    the specified name\r\n        this.SFX.clip = this.SFXMap.get(clipName);\r\n       
    this.SFX.loop = false;\r\n        // Only play if sound clip exists\r\n       
    if (!this.SFX.isPlaying)\r\n            this.SFX.Play();\r\n    }\r\n    OnPlayLoopSFX(clipName)
    {\r\n        if (this.SFX)\r\n            this.SFX.Stop();\r\n        if (this.SFX.isPlaying)\r\n           
    return;\r\n        // Set the clip for the specified name\r\n        this.SFX.clip
    = this.SFXMap.get(clipName);\r\n        this.SFX.loop = true;\r\n        // Only
    play if sound clip exists\r\n        if (!this.SFX.isPlaying)\r\n           
    this.SFX.Play();\r\n    }\r\n    OnPlayButtonSFX(clipName) {\r\n        if (this.buttonSFX)\r\n           
    this.buttonSFX.Stop();\r\n        if (this.buttonSFX.isPlaying)\r\n           
    return;\r\n        // Set the clip for the specified name\r\n        this.buttonSFX.clip
    = this.SFXMap.get(clipName);\r\n        this.buttonSFX.loop = false;\r\n       
    // Only play if sound clip exists\r\n        if (!this.buttonSFX.isPlaying)\r\n           
    this.buttonSFX.Play();\r\n    }\r\n    OnPlayButtonClick() {\r\n        this.OnPlayButtonSFX(this.keyBtnClick);\r\n   
    }\r\n    OnPlayButtonSelect() {\r\n        this.OnPlayButtonSFX(this.keyBtnSelect);\r\n   
    }\r\n    StopSFX() {\r\n        this.SFX.Stop();\r\n    }\r\n    ToMain() {\r\n       
    // Stop any currently playing sounds\r\n        this.BGM.Stop();\r\n        this.SFX.Stop();\r\n       
    // Play the Main BGM\r\n        this.OnPlayBGM(this.keyMain);\r\n    }\r\n}\r\nexports.default
    = SoundManager;\r\n//# sourceMappingURL=data:application/json;base64,","assetPath":"Assets/Scripts/SoundManager.ts","manifest":{"properties":[{"assembly":"mscorlib","name":"keyMain","type":"System.String","isArray":false,"initValue":["Main"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"keyStage","type":"System.String","isArray":false,"initValue":["Stage"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"keyStageEnd","type":"System.String","isArray":false,"initValue":["StageEnd"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"keyShop","type":"System.String","isArray":false,"initValue":["Shop"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"keyCardSet","type":"System.String","isArray":false,"initValue":["CardSet"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"keyBtnClick","type":"System.String","isArray":false,"initValue":["Button_Click"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"keyBtnSelect","type":"System.String","isArray":false,"initValue":["Button_Select"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"keyBtnEquip","type":"System.String","isArray":false,"initValue":["Button_Equip"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"keySettlement","type":"System.String","isArray":false,"initValue":["Settlement"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.AudioModule","name":"BGM","type":"UnityEngine.AudioSource","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.AudioModule","name":"SFX","type":"UnityEngine.AudioSource","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.AudioModule","name":"buttonSFX","type":"UnityEngine.AudioSource","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"muteBGM","type":"UnityEngine.UI.Toggle","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"muteSFX","type":"UnityEngine.UI.Toggle","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]}],"name":"SoundManager","description":""},"isCompiled":true}'
  typescriptHash: fb304d1517f054c186601326c7ce39b8
  onlyWriteTrigger: 0
