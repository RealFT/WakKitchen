fileFormatVersion: 2
guid: 76394cc44e82a36469b218c9894fb533
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nconst ExpandOrderReceipt_1 = require(\"./ExpandOrderReceipt\");\r\nconst
    Receipt_1 = require(\"./Receipt\");\r\nvar Ingredient;\r\n(function (Ingredient)
    {\r\n    Ingredient[\"TOP_BURN\"] = \"topBun\";\r\n    Ingredient[\"BOTTOM_BURN\"]
    = \"bottomBun\";\r\n    Ingredient[\"PATTY\"] = \"patty\";\r\n    Ingredient[\"CABBAGE\"]
    = \"cabbage\";\r\n    Ingredient[\"TOMATO\"] = \"tomato\";\r\n    Ingredient[\"ONION\"]
    = \"onion\";\r\n    Ingredient[\"CHEESE\"] = \"cheese\";\r\n    Ingredient[\"PICKLE\"]
    = \"pickle\";\r\n})(Ingredient || (Ingredient = {}));\r\nvar Drink;\r\n(function
    (Drink) {\r\n    Drink[\"COKE\"] = \"Coke\";\r\n    Drink[\"SPRITE\"] = \"Sprite\";\r\n   
    Drink[\"ZERO_COKE\"] = \"Zero Coke\";\r\n    Drink[\"FANTA\"] = \"Fanta\";\r\n   
    Drink[\"WATER\"] = \"Water\";\r\n})(Drink || (Drink = {}));\r\nclass OrderManager
    extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor() {\r\n       
    super(...arguments);\r\n        this.difficultyLevel = 1;\r\n    }\r\n    Start()
    {\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.expandOrderReceipt
    = this.expandOrderReceiptObj.GetComponent($typeof(ExpandOrderReceipt_1.default));\r\n       
    if (this.expandOrderReceipt)\r\n            this.expandOrderReceipt.setPanel(false);\r\n       
    this.curIngredients = 0;\r\n        this.maxIngredients = 6;\r\n        this.curOrderNumber
    = 0;\r\n        this.maxOrderSize = this.orders.length;\r\n        for (let i
    = 0; i < this.maxOrderSize; i++) {\r\n            this.initOrderBtn(i);\r\n       
    }\r\n        this.receipts = [];\r\n        this.clearOrderBtn();\r\n       
    this.StartOrder();\r\n    }\r\n    StartOrder() {\r\n        this.StartCoroutine(this.DoOrder());\r\n   
    }\r\n    StopOrder() {\r\n        this.StopAllCoroutines();\r\n    }\r\n    *DoOrder()
    {\r\n        while (true) {\r\n            if (this.maxOrderSize > this.curOrderNumber)\r\n               
    this.addOrder();\r\n            const waitTime = 10; //Math.max(60 - (this.difficultyLevel
    - 1) * 3, 30) + 30 * Math.random();\r\n            yield new UnityEngine_1.WaitForSeconds(waitTime);\r\n       
    }\r\n    }\r\n    // the level of difficulty of the order\r\n    setDifficultyLevel(difficultyLevel)
    {\r\n        this.difficultyLevel = difficultyLevel;\r\n    }\r\n    // Enable
    corresponding index order\r\n    diplayExpandOrder(index) {\r\n        if (!this.receipts)\r\n           
    return;\r\n        const receipt = this.receipts[index];\r\n        const ingredients
    = receipt.ingredients;\r\n        const burgerSprites = [];\r\n        for (const
    ingredient of ingredients) {\r\n            const sprite = this.getIngredientSprite(ingredient);\r\n           
    if (sprite) {\r\n                burgerSprites.push(sprite);\r\n            }\r\n       
    }\r\n        const drinkSprite = this.getDrinkSprite(receipt.drink);\r\n       
    const sideSprite = this.getSideSprite(receipt.side);\r\n        const additionalOrder
    = receipt.additionalOrder;\r\n        const characterSprite = this.getCharacterSprite(receipt.character);\r\n       
    if (!this.expandOrderReceipt)\r\n            this.expandOrderReceipt = this.expandOrderReceiptObj.GetComponent($typeof(ExpandOrderReceipt_1.default));\r\n       
    this.expandOrderReceipt.SetOrderReceipt(ingredients, burgerSprites, drinkSprite,
    sideSprite, additionalOrder, characterSprite);\r\n        this.expandOrderReceipt.setPanel(true);\r\n   
    }\r\n    initOrderBtn(index) {\r\n        this.orders[index].onClick.AddListener(()
    => {\r\n            this.diplayExpandOrder(index);\r\n        });\r\n    }\r\n   
    clearOrderBtn() {\r\n        for (let i = 0; i < this.orders.length; i++) {\r\n           
    this.orders[i].gameObject.SetActive(false);\r\n        }\r\n    }\r\n    clearOrder()
    {\r\n        while (this.receipts.length != 0) {\r\n            this.receipts.pop();\r\n       
    }\r\n        this.curOrderNumber = 0;\r\n    }\r\n    removeOrder(index) {\r\n       
    this.receipts.splice(index, 1);\r\n        this.orders[this.curOrderNumber].gameObject.SetActive(false);\r\n       
    this.curOrderNumber--;\r\n    }\r\n    getIngredient() {\r\n        // Calculate
    the probability of each ingredient and the null value based on the difficulty
    level\r\n        const nullProb = 1 / (this.difficultyLevel + 1);\r\n       
    // Decreases Patty''s probability.\r\n        const pattyProb = (1 - nullProb)
    * (1 / this.maxIngredients + this.curIngredients);\r\n        const otherProb
    = (1 - nullProb - pattyProb) / (this.maxIngredients - 1);\r\n        // Randomly
    select an ingredient or the null value based on the probability distribution\r\n       
    const random = Math.random();\r\n        if (random < nullProb) {\r\n           
    return null;\r\n        }\r\n        else if (random < nullProb + pattyProb)
    {\r\n            return Ingredient.PATTY;\r\n        }\r\n        else if (random
    < nullProb + pattyProb + otherProb) {\r\n            return Ingredient.CABBAGE;\r\n       
    }\r\n        else if (random < nullProb + pattyProb + 2 * otherProb) {\r\n           
    return Ingredient.TOMATO;\r\n        }\r\n        else if (random < nullProb
    + pattyProb + 3 * otherProb) {\r\n            return Ingredient.ONION;\r\n       
    }\r\n        else if (random < nullProb + pattyProb + 4 * otherProb) {\r\n           
    return Ingredient.CHEESE;\r\n        }\r\n        else {\r\n            return
    Ingredient.PICKLE;\r\n        }\r\n    }\r\n    getIngredients() {\r\n       
    const numIngredients = Math.floor((2 + this.difficultyLevel * 3 / 20) * Math.random())
    + 1;\r\n        const ingredients = [];\r\n        ingredients.push(Ingredient.BOTTOM_BURN);\r\n       
    for (let i = 0; i < numIngredients; i++) {\r\n            const ingredient =
    this.getIngredient();\r\n            if (ingredient) {\r\n                ingredients.push(ingredient);\r\n           
    }\r\n        }\r\n        ingredients.push(Ingredient.TOP_BURN);\r\n        return
    ingredients;\r\n    }\r\n    addOrder() {\r\n        this.receipts.push(this.generateOrder());\r\n       
    this.orders[this.curOrderNumber].gameObject.SetActive(true);\r\n        this.curOrderNumber++;\r\n   
    }\r\n    // Create an order and add it to the receipt array\r\n    generateOrder()
    {\r\n        const receipt = new Receipt_1.default();\r\n        // Generate
    the order receipt by combining the burger ingredients, fries, and drink\r\n       
    const ingredients = this.getIngredients();\r\n        const burger = `Burger
    with ${ingredients.join('', '')} on it`;\r\n        const fries = ''Fries'';\r\n       
    const drink = this.generateDrink();\r\n        const character = this.generateCharacter();\r\n       
    const additionalOrder = this.generateAdditionalOrder(character, burger, fries,
    drink);\r\n        receipt.setReceipt(ingredients, drink, fries, character, additionalOrder);\r\n       
    return receipt;\r\n    }\r\n    // pick a drink randomly and return it.\r\n   
    generateDrink() {\r\n        // Randomly select a drink\r\n        const drinks
    = [Drink.COKE, Drink.SPRITE, Drink.ZERO_COKE, Drink.FANTA, Drink.WATER];\r\n       
    const drink = drinks[Math.floor(Math.random() * drinks.length)];\r\n        //
    Determine the probability of adding ice based on the difficulty level\r\n       
    //const iceProb = Math.min(0.5 + this.difficultyLevel * 0.02, 1);\r\n       
    // Randomly decide whether to add ice based on the probability\r\n        //const
    ice = Math.random() < iceProb ? ''with ice'' : ''without ice'';\r\n        return
    drink;\r\n    }\r\n    // \r\n    generateCharacter() {\r\n        return null;\r\n   
    }\r\n    generateAdditionalOrder(character, burger, fries, drink) {\r\n       
    return `${burger}\\n${fries}\\n${drink}`;\r\n    }\r\n    // Return sprite of
    the ingredient\r\n    getIngredientSprite(ingredient) {\r\n        switch (ingredient)
    {\r\n            case Ingredient.TOP_BURN:\r\n                return this.topBunSprite;\r\n           
    case Ingredient.BOTTOM_BURN:\r\n                return this.bottomBunSprite;\r\n           
    case Ingredient.PATTY:\r\n                return this.pattySprite;\r\n           
    case Ingredient.CABBAGE:\r\n                return this.cabbage;\r\n           
    case Ingredient.TOMATO:\r\n                return this.tomatoSprite;\r\n           
    case Ingredient.ONION:\r\n                return this.onionSprite;\r\n           
    case Ingredient.CHEESE:\r\n                return this.cheeseSprite;\r\n           
    case Ingredient.PICKLE:\r\n                return this.pickleSprite;\r\n           
    default:\r\n                return null;\r\n        }\r\n    }\r\n    getDrinkSprite(drinkName)
    {\r\n        switch (drinkName) {\r\n            case Drink.COKE:\r\n               
    return this.cokeSprite;\r\n            case Drink.SPRITE:\r\n               
    return this.spriteSprite;\r\n            case Drink.ZERO_COKE:\r\n               
    return this.zeroCokeSprite;\r\n            case Drink.FANTA:\r\n               
    return this.fantaSprite;\r\n            case Drink.WATER:\r\n               
    return this.waterSprite;\r\n            default:\r\n                return null;\r\n       
    }\r\n    }\r\n    // Return sprite of the side\r\n    getSideSprite(sideName)
    {\r\n        switch (sideName) {\r\n            case ''Fries'':\r\n               
    return this.friesSprite;\r\n            case ''Cheese Sticks'':\r\n               
    return this.cheeseSticksSprite;\r\n            default:\r\n                return
    null;\r\n        }\r\n    }\r\n    // Return sprite of the character\r\n    getCharacterSprite(characterName)
    {\r\n        switch (characterName) {\r\n            default:\r\n               
    return this.characterSprites[0];\r\n        }\r\n    }\r\n}\r\nexports.default
    = OrderManager;\r\n//# sourceMappingURL=data:application/json;base64,","assetPath":"Assets/Scripts/OrderManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"expandOrderReceiptObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"","name":"expandOrderReceipt","type":"C:/Users/cba08/Documents/GitHub/WakKitchen/Assets/Scripts/ExpandOrderReceipt.default","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"pattySprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"cabbage","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"tomatoSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"onionSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"cheeseSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"pickleSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"topBunSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"bottomBunSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"friesSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"cheeseSticksSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"cokeSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"spriteSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"zeroCokeSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"fantaSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"waterSprite","type":"UnityEngine.Sprite","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"characterSprites","type":"UnityEngine.Sprite[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"","name":"receipts","type":"C:/Users/cba08/Documents/GitHub/WakKitchen/Assets/Scripts/Receipt.default","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.UI","name":"orders","type":"UnityEngine.UI.Button[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"OrderManager","description":""},"isCompiled":true}'
  typescriptHash: 197639e5348f46f8490302061adc7259
  onlyWriteTrigger: 0
