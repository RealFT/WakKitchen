fileFormatVersion: 2
guid: 76394cc44e82a36469b218c9894fb533
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nconst ExpandOrderReceipt_1 = require(\"./ExpandOrderReceipt\");\r\nconst
    Receipt_1 = require(\"./Receipt\");\r\nconst DataManager_1 = require(\"./DataManager\");\r\nconst
    OrderReceipt_1 = require(\"./OrderReceipt\");\r\nconst BalanceManager_1 = require(\"./Shop/BalanceManager\");\r\nconst
    SoundManager_1 = require(\"./SoundManager\");\r\nconst UIManager_1 = require(\"./UIManager\");\r\nclass
    OrderManager extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor()
    {\r\n        super(...arguments);\r\n        this.receipts = [];\r\n        this.waitSliders
    = []; // \r\n        this.waitCoroutines = [];\r\n        // array of produced
    Ingredient, Drink, Side.\r\n        // number of items in inventory indexed by
    product id\r\n        this.productInventory = new Map();\r\n        // public
    getProductSprite(product: number): Sprite {\r\n        //     // split ingredients,
    drink, side\r\n        //     if (product < Ingredient.END)\r\n        //        
    return this.getIngredientSprite(product);\r\n        //     else if (product
    < Drink.END)\r\n        //         return this.getDrinkSprite(product);\r\n       
    //     else\r\n        //         return this.getSideSprite(product);\r\n       
    // }\r\n        // // Return sprite of the ingredient\r\n        // public getIngredientSprite(ingredient:
    Ingredient): Sprite {\r\n        //     return this.ingredientSprites[ingredient
    - Ingredient.START];\r\n        // }\r\n        // public getDrinkSprite(drinkName:
    Drink): Sprite {\r\n        //     return this.drinkSprites[drinkName - Drink.START];\r\n       
    // }\r\n        // // Return sprite of the side\r\n        // public getSideSprite(sideName:
    Side): Sprite {\r\n        //     return this.sideSprites[sideName - Side.START];\r\n       
    // }\r\n        // // Return sprite of the character\r\n        // public getCharacterSprite(characterName:
    Customer): Sprite {\r\n        //     return this.characterSprites[characterName
    - Customer.START];\r\n        // }\r\n    }\r\n    static GetInstance() {\r\n       
    if (!OrderManager.Instance) {\r\n            //Debug.LogError(\"OrderManager\");\r\n           
    var _obj = UnityEngine_1.GameObject.Find(\"OrderManager\");\r\n            if
    (!_obj) {\r\n                _obj = new UnityEngine_1.GameObject(\"OrderManager\");\r\n               
    _obj.AddComponent($typeof(OrderManager));\r\n            }\r\n            OrderManager.Instance
    = _obj.GetComponent($typeof(OrderManager));\r\n            UnityEngine_1.GameObject.DontDestroyOnLoad(_obj);\r\n       
    }\r\n        return OrderManager.Instance;\r\n    }\r\n    Awake() {\r\n       
    if (this != OrderManager.GetInstance())\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n   
    }\r\n    Init() {\r\n        this.StopOrder();\r\n        this.expandOrderReceipt
    = this.expandOrderReceiptObj.GetComponent($typeof(ExpandOrderReceipt_1.default));\r\n       
    if (this.expandOrderReceipt)\r\n            this.expandOrderReceipt.setPanel(false);\r\n       
    this.maxOrderSize = this.orderReceipts.length;\r\n        for (let i = 0; i <
    this.maxOrderSize; i++) {\r\n            this.InitOrderBtn(i);\r\n        }\r\n       
    this.ClearOrder();\r\n        this.ClearOrderReceipts();\r\n        this.InitProduct();\r\n       
    /**/\r\n        if (this.waitTime == 0)\r\n            this.setWaitTime(20);\r\n   
    }\r\n    InitProduct() {\r\n        this.RemoveAllItemsFromInventory();\r\n       
    this.AddItemToInventory(DataManager_1.Ingredient.BOTTOM_BURN, 100);\r\n       
    this.AddItemToInventory(DataManager_1.Ingredient.TOP_BURN, 100);\r\n        this.AddItemToInventory(DataManager_1.Ingredient.CHEESE,
    100);\r\n    }\r\n    // Add item to inventory\r\n    AddItemToInventory(product,
    quantity = 1) {\r\n        // if already exist same product\r\n        if (this.productInventory.has(product))
    {\r\n            this.productInventory.set(product, this.productInventory.get(product)
    + quantity);\r\n        }\r\n        else {\r\n            this.productInventory.set(product,
    quantity);\r\n        }\r\n        // SoundManager.GetInstance().OnPlayButtonSFX(SoundManager.GetInstance().keyBtnSelect);\r\n   
    }\r\n    // Remove item from inventory\r\n    RemoveItemFromInventory(product,
    quantity = 1) {\r\n        if (this.productInventory.has(product)) {\r\n           
    const currentQuantity = this.productInventory.get(product);\r\n            if
    (currentQuantity >= quantity) {\r\n                this.productInventory.set(product,
    currentQuantity - quantity);\r\n                // if product doesn''t have any
    quantity\r\n                if (this.productInventory.get(product) === 0) {\r\n                   
    // delete product from productInventory\r\n                    this.productInventory.delete(product);\r\n               
    }\r\n            }\r\n            else {\r\n                UnityEngine_1.Debug.Log(`Not
    enough ${product} in productInventory`);\r\n            }\r\n        }\r\n       
    else {\r\n            UnityEngine_1.Debug.Log(`${product} not found in productInventory`);\r\n       
    }\r\n    }\r\n    // Remove all items from inventory\r\n    RemoveAllItemsFromInventory()
    {\r\n        this.productInventory.clear();\r\n    }\r\n    GetQuantityFromInventory(product)
    {\r\n        if (this.productInventory.has(product)) {\r\n            return
    this.productInventory.get(product);\r\n        }\r\n        else {\r\n           
    return 0;\r\n        }\r\n    }\r\n    // To import an array that stores all
    products with one or more numbers in the inventory\r\n    GetProductsFromInventory()
    {\r\n        const products = [];\r\n        for (const [key, value] of this.productInventory)
    {\r\n            if (value > 0) {\r\n                products.push(key);\r\n           
    }\r\n        }\r\n        return products;\r\n    }\r\n    StartOrder() {\r\n       
    this.StartCoroutine(this.DoOrder());\r\n    }\r\n    StopOrder() {\r\n       
    this.StopAllCoroutines();\r\n    }\r\n    *DoOrder() {\r\n        yield new UnityEngine_1.WaitForSeconds(2);\r\n       
    while (true) {\r\n            if (this.maxOrderSize > this.curOrderNumber)\r\n               
    this.addOrder();\r\n            let waitTime = Math.max(2 + 8 * Math.random());\r\n           
    if (this.curOrderNumber <= 1)\r\n                waitTime *= 0.5;\r\n           
    console.log(\"waitTime: \" + waitTime);\r\n            yield new UnityEngine_1.WaitForSeconds(waitTime);\r\n       
    }\r\n    }\r\n    checkOrder(products) {\r\n        let ingredients = [];\r\n       
    let drink = -1;\r\n        let side = -1;\r\n        // split ingredients, drink,
    side\r\n        for (let i = 0; i < products.length; i++) {\r\n            if
    (products[i] <= DataManager_1.Ingredient.END)\r\n                ingredients.push(products[i]);\r\n           
    else if (products[i] <= DataManager_1.Drink.END)\r\n                drink = products[i];\r\n           
    else\r\n                side = products[i];\r\n        }\r\n        // find the
    same receipt\r\n        for (let index = 0; index < this.receipts.length; index++)
    {\r\n            if (this.receipts[index].compareReceipt(drink, side, ingredients))
    {\r\n                // stop wait Corutine\r\n                this.StopCoroutine(this.waitCoroutines[index]);\r\n               
    // earn this receipt''s pay\r\n                BalanceManager_1.default.GetInstance().GainBalance(BalanceManager_1.Currency.wak,
    this.receipts[index].pay);\r\n                // if waitSlider isn''t 0, remove
    this receipt\r\n                this.removeOrder(index);\r\n                return
    true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n   
    // Enable corresponding index order\r\n    DisplayExpandOrder(index) {\r\n       
    if (!this.receipts)\r\n            return;\r\n        const receipt = this.receipts[index];\r\n       
    const ingredients = receipt.ingredients;\r\n        const burgerSprites = [];\r\n       
    for (const ingredient of ingredients) {\r\n            const sprite = DataManager_1.default.GetInstance().getIngredientSprite(ingredient);\r\n           
    if (sprite) {\r\n                burgerSprites.push(sprite);\r\n            }\r\n       
    }\r\n        const drinkSprite = DataManager_1.default.GetInstance().getDrinkSprite(receipt.drink);\r\n       
    const sideSprite = DataManager_1.default.GetInstance().getSideSprite(receipt.side);\r\n       
    const additionalOrder = receipt.additionalOrder;\r\n        const cost = receipt.pay.toString();\r\n       
    const characterSprite = DataManager_1.default.GetInstance().GetCharacterSprite(receipt.character);\r\n       
    if (!this.expandOrderReceipt)\r\n            this.expandOrderReceipt = this.expandOrderReceiptObj.GetComponent($typeof(ExpandOrderReceipt_1.default));\r\n       
    this.expandOrderReceipt.SetOrderReceipt(burgerSprites, drinkSprite, sideSprite,
    additionalOrder, cost, characterSprite);\r\n        this.expandOrderReceipt.setPanel(true);\r\n       
    SoundManager_1.default.GetInstance().OnPlayButtonSFX(SoundManager_1.default.GetInstance().keyBtnSelect);\r\n   
    }\r\n    addOrder() {\r\n        const receipt = DataManager_1.default.GetInstance().GetRandomStageReceipt();\r\n       
    this.receipts.push(receipt);\r\n        this.orderReceipts[this.curOrderNumber].GetComponent($typeof(OrderReceipt_1.default))?.SetOrderReceipt(receipt);\r\n       
    this.orderReceipts[this.curOrderNumber].gameObject.SetActive(true);\r\n       
    this.waitCoroutines[this.curOrderNumber] = this.StartCoroutine(this.WaitOrder(this.curOrderNumber,
    0));\r\n        this.curOrderNumber++;\r\n    }\r\n    setWaitTime(waitTime)
    {\r\n        this.waitTime = waitTime;\r\n    }\r\n    *WaitOrder(index, waitTime
    = 0) {\r\n        const period = 0.2;\r\n        let curTime = waitTime;\r\n       
    this.waitSliders[index].value = 1;\r\n        // loop until waitSlider''s value
    is 0\r\n        while (this.waitSliders[index].value > 0) {\r\n            this.waitSliders[index].value
    = Math.max(0, 1 - curTime / this.waitTime);\r\n            yield new UnityEngine_1.WaitForSeconds(period);\r\n           
    curTime += period;\r\n        }\r\n        this.removeOrder(index);\r\n    }\r\n   
    removeOrder(index) {\r\n        this.curOrderNumber--;\r\n        // stop coroutines
    and reset sliders\r\n        for (let i = index; i < this.waitCoroutines.length;
    i++) {\r\n            this.StopCoroutine(this.waitCoroutines[i]);\r\n           
    this.waitSliders[index].value = 1;\r\n        }\r\n        // shift orderReceipts
    to fill the gap\r\n        for (let i = index; i < this.receipts.length - 1;
    i++) {\r\n            this.receipts[i] = this.receipts[i + 1];\r\n           
    const curTime = (1 - this.waitSliders[i + 1].value) * this.waitTime;\r\n           
    this.waitCoroutines[i] = this.StartCoroutine(this.WaitOrder(i, curTime));\r\n           
    this.orderReceipts[i].GetComponent($typeof(OrderReceipt_1.default))?.SetOrderReceipt(this.receipts[i]);\r\n       
    }\r\n        // remove the last order\r\n        this.receipts.pop();\r\n       
    this.orderReceipts[this.curOrderNumber].gameObject.SetActive(false);\r\n    }\r\n   
    ClearOrder() {\r\n        this.curOrderNumber = 0;\r\n        this.receipts =
    [];\r\n    }\r\n    InitOrderBtn(index) {\r\n        var openReceiptBtn = this.orderReceipts[index].GetComponent($typeof(OrderReceipt_1.default)).GetReceiptButton();\r\n       
    openReceiptBtn.onClick.AddListener(() => {\r\n            this.DisplayExpandOrder(index);\r\n       
    });\r\n    }\r\n    ClearOrderReceipts() {\r\n        for (let i = 0; i < this.orderReceipts.length;
    i++) {\r\n            this.orderReceipts[i].gameObject.SetActive(false);\r\n           
    this.orderReceipts[i].GetComponent($typeof(OrderReceipt_1.default))?.ClearOrderReceipt();\r\n       
    }\r\n    }\r\n    DisableOrder() {\r\n        this.StopOrder();\r\n        this.ClearOrder();\r\n       
    this.ClearOrderReceipts();\r\n        if (this.expandOrderReceipt)\r\n           
    this.expandOrderReceipt.setPanel(false);\r\n    }\r\n}\r\nexports.default = OrderManager;\r\n//#
    sourceMappingURL=data:application/json;base64,","assetPath":"Assets/Scripts/OrderManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"expandOrderReceiptObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"","name":"expandOrderReceipt","type":"C:/Users/Jun/Documents/GitHub/WakKitchen/Assets/Scripts/ExpandOrderReceipt.default","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"orderReceipts","type":"UnityEngine.GameObject[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"waitTime","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"waitSliders","type":"UnityEngine.UI.Slider[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]}],"name":"OrderManager","description":""},"isCompiled":true}'
  typescriptHash: 77af66bd7b61d1ca48e572dc032d4b72
  onlyWriteTrigger: 0
