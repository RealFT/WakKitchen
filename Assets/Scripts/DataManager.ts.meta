fileFormatVersion: 2
guid: c8aa2219ba0ed2641863883b651a275b
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: "{\"source\":\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports,
    \\\"__esModule\\\", { value: true });\\r\\nexports.Character = exports.Side =
    exports.Drink = exports.Ingredient = exports.Cost = exports.Section = exports.Grade
    = void 0;\\r\\nconst ZEPETO_Script_1 = require(\\\"ZEPETO.Script\\\");\\r\\nconst
    UnityEngine_1 = require(\\\"UnityEngine\\\");\\r\\nconst Receipt_1 = require(\\\"./Receipt\\\");\\r\\nconst
    UnityEngine_2 = require(\\\"UnityEngine\\\");\\r\\nconst CardData_1 = require(\\\"./Employee/CardData\\\");\\r\\nconst
    ZEPETO_Multiplay_1 = require(\\\"ZEPETO.Multiplay\\\");\\r\\nconst ZEPETO_World_1
    = require(\\\"ZEPETO.World\\\");\\r\\nvar Grade;\\r\\n(function (Grade) {\\r\\n   
    Grade[Grade[\\\"D\\\"] = 0] = \\\"D\\\";\\r\\n    Grade[Grade[\\\"C\\\"] = 1]
    = \\\"C\\\";\\r\\n    Grade[Grade[\\\"B\\\"] = 2] = \\\"B\\\";\\r\\n    Grade[Grade[\\\"A\\\"]
    = 3] = \\\"A\\\";\\r\\n    Grade[Grade[\\\"S\\\"] = 4] = \\\"S\\\";\\r\\n})(Grade
    = exports.Grade || (exports.Grade = {}));\\r\\nvar Section;\\r\\n(function (Section)
    {\\r\\n    Section[Section[\\\"Dispenser\\\"] = 0] = \\\"Dispenser\\\";\\r\\n   
    Section[Section[\\\"Fryer\\\"] = 1] = \\\"Fryer\\\";\\r\\n    Section[Section[\\\"Grill\\\"]
    = 2] = \\\"Grill\\\";\\r\\n    Section[Section[\\\"Prep\\\"] = 3] = \\\"Prep\\\";\\r\\n   
    Section[Section[\\\"Plating\\\"] = 4] = \\\"Plating\\\";\\r\\n})(Section = exports.Section
    || (exports.Section = {}));\\r\\nvar Cost;\\r\\n(function (Cost) {\\r\\n    Cost[Cost[\\\"TOP_BURN\\\"]
    = 15] = \\\"TOP_BURN\\\";\\r\\n    Cost[Cost[\\\"BOTTOM_BURN\\\"] = 15] = \\\"BOTTOM_BURN\\\";\\r\\n   
    Cost[Cost[\\\"PATTY\\\"] = 100] = \\\"PATTY\\\";\\r\\n    Cost[Cost[\\\"CABBAGE\\\"]
    = 20] = \\\"CABBAGE\\\";\\r\\n    Cost[Cost[\\\"TOMATO\\\"] = 20] = \\\"TOMATO\\\";\\r\\n   
    Cost[Cost[\\\"ONION\\\"] = 10] = \\\"ONION\\\";\\r\\n    Cost[Cost[\\\"CHEESE\\\"]
    = 20] = \\\"CHEESE\\\";\\r\\n    Cost[Cost[\\\"PAENCHI\\\"] = 30] = \\\"PAENCHI\\\";\\r\\n   
    Cost[Cost[\\\"NECKSRITE\\\"] = 30] = \\\"NECKSRITE\\\";\\r\\n    Cost[Cost[\\\"HOTCHS\\\"]
    = 30] = \\\"HOTCHS\\\";\\r\\n    Cost[Cost[\\\"ORANGE\\\"] = 30] = \\\"ORANGE\\\";\\r\\n   
    Cost[Cost[\\\"PINEAPPLE\\\"] = 30] = \\\"PINEAPPLE\\\";\\r\\n    Cost[Cost[\\\"FRY\\\"]
    = 60] = \\\"FRY\\\";\\r\\n})(Cost = exports.Cost || (exports.Cost = {}));\\r\\nvar
    Ingredient;\\r\\n(function (Ingredient) {\\r\\n    Ingredient[Ingredient[\\\"START\\\"]
    = 0] = \\\"START\\\";\\r\\n    Ingredient[Ingredient[\\\"BOTTOM_BURN\\\"] = 0]
    = \\\"BOTTOM_BURN\\\";\\r\\n    Ingredient[Ingredient[\\\"CABBAGE\\\"] = 1] =
    \\\"CABBAGE\\\";\\r\\n    Ingredient[Ingredient[\\\"TOMATO\\\"] = 2] = \\\"TOMATO\\\";\\r\\n   
    Ingredient[Ingredient[\\\"PATTY\\\"] = 3] = \\\"PATTY\\\";\\r\\n    Ingredient[Ingredient[\\\"CHEESE\\\"]
    = 4] = \\\"CHEESE\\\";\\r\\n    Ingredient[Ingredient[\\\"ONION\\\"] = 5] = \\\"ONION\\\";\\r\\n   
    Ingredient[Ingredient[\\\"TOP_BURN\\\"] = 6] = \\\"TOP_BURN\\\";\\r\\n    Ingredient[Ingredient[\\\"END\\\"]
    = 6] = \\\"END\\\";\\r\\n})(Ingredient = exports.Ingredient || (exports.Ingredient
    = {}));\\r\\nvar Drink;\\r\\n(function (Drink) {\\r\\n    Drink[Drink[\\\"START\\\"]
    = 8] = \\\"START\\\";\\r\\n    Drink[Drink[\\\"PAENCHI\\\"] = 8] = \\\"PAENCHI\\\";\\r\\n   
    Drink[Drink[\\\"NECKSRITE\\\"] = 9] = \\\"NECKSRITE\\\";\\r\\n    Drink[Drink[\\\"HOTCHS\\\"]
    = 10] = \\\"HOTCHS\\\";\\r\\n    Drink[Drink[\\\"ORANGE\\\"] = 11] = \\\"ORANGE\\\";\\r\\n   
    Drink[Drink[\\\"PINEAPPLE\\\"] = 12] = \\\"PINEAPPLE\\\";\\r\\n    Drink[Drink[\\\"END\\\"]
    = 12] = \\\"END\\\";\\r\\n})(Drink = exports.Drink || (exports.Drink = {}));\\r\\nvar
    Side;\\r\\n(function (Side) {\\r\\n    Side[Side[\\\"START\\\"] = 13] = \\\"START\\\";\\r\\n   
    Side[Side[\\\"FRY\\\"] = 13] = \\\"FRY\\\";\\r\\n    Side[Side[\\\"END\\\"] =
    13] = \\\"END\\\";\\r\\n})(Side = exports.Side || (exports.Side = {}));\\r\\nvar
    Character;\\r\\n(function (Character) {\\r\\n    Character[Character[\\\"START\\\"]
    = 14] = \\\"START\\\";\\r\\n    Character[Character[\\\"HAKU\\\"] = 14] = \\\"HAKU\\\";\\r\\n   
    Character[Character[\\\"CALLYCARLY\\\"] = 15] = \\\"CALLYCARLY\\\";\\r\\n   
    Character[Character[\\\"CHUNSIK\\\"] = 16] = \\\"CHUNSIK\\\";\\r\\n    Character[Character[\\\"DANDAPBUG\\\"]
    = 17] = \\\"DANDAPBUG\\\";\\r\\n    Character[Character[\\\"HYEJI\\\"] = 18]
    = \\\"HYEJI\\\";\\r\\n    Character[Character[\\\"DOPAMINE\\\"] = 19] = \\\"DOPAMINE\\\";\\r\\n   
    Character[Character[\\\"HIKIKING\\\"] = 20] = \\\"HIKIKING\\\";\\r\\n    Character[Character[\\\"KIMCHIMANDU\\\"]
    = 21] = \\\"KIMCHIMANDU\\\";\\r\\n    Character[Character[\\\"KWONMIN\\\"] =
    22] = \\\"KWONMIN\\\";\\r\\n    Character[Character[\\\"ROENTGENIUM\\\"] = 23]
    = \\\"ROENTGENIUM\\\";\\r\\n    Character[Character[\\\"RUSUK\\\"] = 24] = \\\"RUSUK\\\";\\r\\n   
    Character[Character[\\\"SECRETTO\\\"] = 25] = \\\"SECRETTO\\\";\\r\\n    Character[Character[\\\"BUSINESSKIM\\\"]
    = 26] = \\\"BUSINESSKIM\\\";\\r\\n    Character[Character[\\\"WAKPHAGO\\\"] =
    27] = \\\"WAKPHAGO\\\";\\r\\n    Character[Character[\\\"WAKGOOD\\\"] = 28] =
    \\\"WAKGOOD\\\";\\r\\n    Character[Character[\\\"PUNGSIN\\\"] = 29] = \\\"PUNGSIN\\\";\\r\\n   
    Character[Character[\\\"SOPHIA\\\"] = 30] = \\\"SOPHIA\\\";\\r\\n    Character[Character[\\\"FREETER\\\"]
    = 31] = \\\"FREETER\\\";\\r\\n    Character[Character[\\\"CARNARJUNGTUR\\\"]
    = 32] = \\\"CARNARJUNGTUR\\\";\\r\\n    Character[Character[\\\"LEEDEOKSU\\\"]
    = 33] = \\\"LEEDEOKSU\\\";\\r\\n    Character[Character[\\\"NOSFERATUHODD\\\"]
    = 34] = \\\"NOSFERATUHODD\\\";\\r\\n    Character[Character[\\\"BUJUNGINGAN\\\"]
    = 35] = \\\"BUJUNGINGAN\\\";\\r\\n    Character[Character[\\\"DOVE\\\"] = 36]
    = \\\"DOVE\\\";\\r\\n    Character[Character[\\\"PARROT\\\"] = 37] = \\\"PARROT\\\";\\r\\n   
    Character[Character[\\\"PAENCHI\\\"] = 38] = \\\"PAENCHI\\\";\\r\\n    Character[Character[\\\"LION\\\"]
    = 39] = \\\"LION\\\";\\r\\n    Character[Character[\\\"END\\\"] = 39] = \\\"END\\\";\\r\\n})(Character
    = exports.Character || (exports.Character = {}));\\r\\nclass DataManager extends
    ZEPETO_Script_1.ZepetoScriptBehaviour {\\r\\n    constructor() {\\r\\n       
    super(...arguments);\\r\\n        this.textContents_ko = new Map();\\r\\n       
    this.textContents_en = new Map();\\r\\n        this.receipts = [];\\r\\n       
    this.stageReceipts = [];\\r\\n        this.costs = new Map();\\r\\n        this.stages
    = [];\\r\\n        this.unlockStages = new Map();\\r\\n        this.cardDatas
    = new Map();\\r\\n        this.inventoryCache = new Map();\\r\\n    }\\r\\n   
    static GetInstance() {\\r\\n        if (!DataManager.Instance) {\\r\\n           
    var _obj = UnityEngine_2.GameObject.Find(\\\"DataManager\\\");\\r\\n           
    if (!_obj) {\\r\\n                UnityEngine_2.Debug.LogError(\\\"New DataManager\\\");\\r\\n               
    _obj = new UnityEngine_2.GameObject(\\\"DataManager\\\");\\r\\n               
    _obj.AddComponent($typeof(DataManager));\\r\\n            }\\r\\n           
    DataManager.Instance = _obj.GetComponent($typeof(DataManager));\\r\\n           
    UnityEngine_2.GameObject.DontDestroyOnLoad(_obj);\\r\\n        }\\r\\n       
    return DataManager.Instance;\\r\\n    }\\r\\n    Awake() {\\r\\n        if (this
    != DataManager.GetInstance())\\r\\n            UnityEngine_2.GameObject.Destroy(this.gameObject);\\r\\n       
    this.SetAreaLangCode();\\r\\n        this.LoadData();\\r\\n    }\\r\\n    Start()
    {\\r\\n        this._multiplay = UnityEngine_2.Object.FindObjectOfType($typeof(ZEPETO_World_1.ZepetoWorldMultiplay));\\r\\n       
    this._multiplay.add_RoomJoined((room) => {\\r\\n            this._room = room;\\r\\n           
    this.InitMessageHandler();\\r\\n        });\\r\\n    }\\r\\n    async InitMessageHandler()
    {\\r\\n        this._room.AddMessageHandler(\\\"onGetStorageResult\\\", (message)
    => {\\r\\n            // message\uAC00 data \uCC98\uB9AC\\r\\n            if
    (message == \\\"\\\") {\\r\\n                console.warn(\\\"no have data\\\");\\r\\n               
    return;\\r\\n            }\\r\\n            // const result: string = message
    as string;\\r\\n            // const values = result.split('_');\\r\\n           
    // switch (values[0]) {\\r\\n            //     case \\\"time\\\":\\r\\n           
    //         break;\\r\\n            //     case \\\"Stage\\\":\\r\\n           
    //         break;\\r\\n            //     case \\\"wakdu\\\":\\r\\n           
    //         break;\\r\\n            // }\\r\\n        });\\r\\n    }\\r\\n   
    SetData(key, value) {\\r\\n        if (this._multiplay.Room == null) {\\r\\n           
    console.warn(\\\"server disconnect\\\");\\r\\n            return;\\r\\n       
    }\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n        data.Add(\\\"key\\\",
    key);\\r\\n        data.Add(\\\"value\\\", value);\\r\\n        this._multiplay.Room?.Send(\\\"onSetStorage\\\",
    data.GetObject());\\r\\n    }\\r\\n    GetData(key) {\\r\\n        if (this._multiplay.Room
    == null) {\\r\\n            console.warn(\\\"server disconnect\\\");\\r\\n           
    return;\\r\\n        }\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    data.Add(\\\"key\\\", key);\\r\\n        this._multiplay.Room?.Send(\\\"onGetStorage\\\",
    data.GetObject());\\r\\n    }\\r\\n    // Returns the value of a given key from
    PlayerPrefs as an integer. \\r\\n    GetValue(key) {\\r\\n        if (UnityEngine_1.PlayerPrefs.HasKey(key))
    {\\r\\n            return UnityEngine_1.PlayerPrefs.GetInt(key);\\r\\n       
    }\\r\\n        else {\\r\\n            // Returns 0 if key does not exist.\\r\\n           
    return 0;\\r\\n        }\\r\\n    }\\r\\n    // Sets the value of a given key
    in PlayerPrefs to a given value.\\r\\n    SetValue(key, value) {\\r\\n       
    UnityEngine_1.PlayerPrefs.SetInt(key, value);\\r\\n    }\\r\\n    LoadData()
    {\\r\\n        this.LoadAllLanguageData();\\r\\n        this.LoadSavedStage();\\r\\n       
    this.LoadCostData();\\r\\n        this.LoadReceiptData();\\r\\n        this.LoadStageData();\\r\\n       
    this.LoadUnlockStageData();\\r\\n        this.LoadCardData();\\r\\n    }\\r\\n   
    LoadSavedStage() {\\r\\n        // this.lastSavedStage = 1;\\r\\n        // this.SetValue(\\\"Stage\\\",
    this.lastSavedStage);\\r\\n        this.lastSavedStage = this.GetValue(\\\"Stage\\\");\\r\\n       
    //\uAC12\uC774 \uC5C6\uC744 \uACBD\uC6B0 0 \uB9AC\uD134. \uCC98\uC74C \uC2DC\uC791\uC740
    1\uC2A4\uD14C\uC774\uC9C0\uBD80\uD130.\\r\\n        if (this.lastSavedStage ==
    0)\\r\\n            this.lastSavedStage = 1;\\r\\n        this.SetValue(\\\"Stage\\\",
    this.lastSavedStage);\\r\\n    }\\r\\n    GetLastSavedStage() {\\r\\n       
    return this.lastSavedStage;\\r\\n    }\\r\\n    SetStage(stage) {\\r\\n       
    this.SetValue(\\\"Stage\\\", stage);\\r\\n        this.lastSavedStage = stage;\\r\\n   
    }\\r\\n    LoadCostData() {\\r\\n        const lines = this.costFile.text.split('\\\\n');
    // split the CSV file by row\\r\\n        for (let i = 0; i < lines.length; i++)
    {\\r\\n            const line = lines[i].trim().replace('\\\\r', ''); // Remove
    any leading/trailing whitespace and '\\\\r' characters\\r\\n            const
    values = line.split(','); // split the row by comma to get the values\\r\\n           
    // do something with the values\\r\\n            const index = +values[0];\\r\\n           
    const cost = +values[1];\\r\\n            this.costs.set(index, cost);\\r\\n       
    }\\r\\n    }\\r\\n    LoadReceiptData() {\\r\\n        const lines = this.receiptFile.text.split('\\\\n');
    // split the CSV file by row\\r\\n        for (let i = 0; i < lines.length; i++)
    {\\r\\n            const line = lines[i].trim().replace('\\\\r', ''); // Remove
    any leading/trailing whitespace and '\\\\r' characters\\r\\n            const
    values = line.split(','); // split the row by comma to get the values\\r\\n           
    // do something with the values\\r\\n            const receipt = new Receipt_1.default();\\r\\n           
    let price = 0;\\r\\n            const ingredients = [];\\r\\n            for
    (let j = 3; j < values.length; j++) {\\r\\n                ingredients.push(+values[j]);\\r\\n               
    price += this.costs.get(+values[j]);\\r\\n            }\\r\\n            // \uAC12\uC774
    -1\uC774 \uC544\uB2D0 \uACBD\uC6B0 \uBB34\uC791\uC704 drink \uD558\uB098 \uC120\uC815\\r\\n           
    const drink = +values[1] == -1 ? -1 : Math.floor(Math.random() * (Drink.END -
    Drink.START)) + Drink.START;\\r\\n            if (drink != -1)\\r\\n               
    price += this.costs.get(drink);\\r\\n            // \uAC12\uC774 -1\uC774 \uC544\uB2D0
    \uACBD\uC6B0 \uBB34\uC791\uC704 side \uD558\uB098 \uC120\uC815\\r\\n           
    const side = +values[2] == -1 ? -1 : Math.floor(Math.random() * (Side.END - Side.START))
    + Side.START;\\r\\n            if (side != -1)\\r\\n                price +=
    this.costs.get(side);\\r\\n            // values[3]\uC774 \uCE90\uB9AD\uD130\uC774\uB098,
    \uD604\uC7AC \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uB294 \uB370\uC774\uD130.\\r\\n           
    let customer = Math.floor(Math.random() * (Character.END - Character.START))
    + Character.START;\\r\\n            // \uCE90\uB9AD\uD130 \uBE14\uB77D(\uC784\uC2DC)\\r\\n           
    switch (customer) {\\r\\n                case Character.CHUNSIK:\\r\\n               
    case Character.NOSFERATUHODD:\\r\\n                    customer = Character.SOPHIA;\\r\\n                   
    break;\\r\\n                case Character.FREETER:\\r\\n                case
    Character.WAKGOOD:\\r\\n                case Character.DANDAPBUG:\\r\\n                   
    customer = Character.HYEJI;\\r\\n                    break;\\r\\n               
    // \uB2E4\uB978 Character \uAC12\uB4E4\uC5D0 \uB300\uD55C \uCC98\uB9AC...\\r\\n               
    default:\\r\\n                    // \uAE30\uBCF8 \uCC98\uB9AC \uB85C\uC9C1\\r\\n                   
    break;\\r\\n            }\\r\\n            switch (+values[0]) {\\r\\n               
    // \uCE58\uC988\uB9CC \uC788\uB294 \uB808\uC2DC\uD53C\uB4E4\uC740 \uC804\uBD80
    \uB2E8\uB2F5\uBC8C\uB808\uB85C \uBCC0\uACBD\\r\\n                case 0:\\r\\n                   
    customer = Character.DANDAPBUG;\\r\\n                    break;\\r\\n           
    }\\r\\n            // \uB3C4\uB451 \uCE90\uB9AD\uD130\uC758 \uACBD\uC6B0 price\uAC00
    0\\r\\n            if (customer == Character.SOPHIA)\\r\\n                price
    = 0;\\r\\n            // \uCE90\uB9AD\uD130\uC5D0 \uB9DE\uB294 \uC5B8\uC5B4 \uB370\uC774\uD130
    \uB79C\uB364\uD558\uAC8C \uAC00\uC838\uC624\uAE30\\r\\n            const randomIndex
    = Math.floor(Math.random() * 3 + 1); // 1~3\\r\\n            const langCode =
    `receipts_${customer}_${randomIndex}`;\\r\\n            receipt.SetReceipt(+values[0],
    price, drink, side, customer, langCode, ingredients);\\r\\n            this.receipts.push(receipt);\\r\\n       
    }\\r\\n        ;\\r\\n    }\\r\\n    LoadStageData() {\\r\\n        const lines
    = this.stageFile.text.split('\\\\n'); // split the CSV file by row\\r\\n       
    for (let i = 0; i < lines.length; i++) {\\r\\n            const line = lines[i].trim().replace('\\\\r',
    ''); // Remove any leading/trailing whitespace and '\\\\r' characters\\r\\n           
    const values = line.split(','); // split the row by comma to get the values\\r\\n           
    // do something with the values\\r\\n            const stageIndexs = values.slice(1);\\r\\n           
    this.stages[values[0]] = stageIndexs;\\r\\n        }\\r\\n    }\\r\\n    LoadUnlockStageData()
    {\\r\\n        const lines = this.unlockStageFile.text.split('\\\\n'); // split
    the CSV file by row\\r\\n        for (let i = 0; i < lines.length; i++) {\\r\\n           
    const line = lines[i].trim().replace('\\\\r', ''); // Remove any leading/trailing
    whitespace and '\\\\r' characters\\r\\n            const values = line.split(',');
    // split the row by comma to get the values\\r\\n            // do something
    with the values\\r\\n            const target = values[1];\\r\\n            const
    stage = +values[2];\\r\\n            this.unlockStages.set(target, stage);\\r\\n       
    }\\r\\n    }\\r\\n    SetStageReceipts(stageIndex) {\\r\\n        // \uAE38\uC774\uAC00
    \uCDA9\uBD84\uD558\uB2E4\uBA74, \uB354\uC774\uC0C1 \uBC18\uBCF5\uC791\uC5C5\uC744
    \uD558\uC9C0 \uC54A\uB294\uB2E4.\\r\\n        if (this.stageReceipts.length >=
    316)\\r\\n            return;\\r\\n        this.stageReceipts = [];\\r\\n       
    // \uCD5C\uB300 \uC778\uB371\uC2A4\uC5D0 \uB3C4\uB2EC\uD588\uC744 \uACBD\uC6B0,
    \uB370\uC774\uD130 \uAE38\uC774\uAC00 1\uC774\uB2E4.\\r\\n        // \uC774 \uAC12\uC740
    \uCD5C\uB300 \uB808\uC2DC\uD53C \uAC1C\uC218\uAC00 \uAE30\uB85D\uB41C\uB2E4.\\r\\n       
    if (this.stages.length <= stageIndex) {\\r\\n            // \uC774\uC81C\uBD80\uD130
    \uBAA8\uB4E0 \uB808\uC2DC\uD53C\uB97C \uB4F1\uB85D\\r\\n            const maxStage
    = this.stages.length - 1;\\r\\n            for (let index = 0; index <= this.stages[maxStage][0];
    index++) {\\r\\n                this.stageReceipts.push(this.GetReceipt(index));\\r\\n           
    }\\r\\n        }\\r\\n        else {\\r\\n            for (let index = 0; index
    < this.stages[stageIndex].length; index++) {\\r\\n                this.stageReceipts.push(this.GetReceipt(this.stages[stageIndex][index]));\\r\\n           
    }\\r\\n        }\\r\\n    }\\r\\n    // ----------- Language -------------\\r\\n   
    LoadAllLanguageData() {\\r\\n        if (UnityEngine_1.PlayerPrefs.HasKey(\\\"Language\\\"))
    {\\r\\n            this.SetLangCode(UnityEngine_1.PlayerPrefs.GetString(\\\"Language\\\"));\\r\\n       
    }\\r\\n        else {\\r\\n            this.SetAreaLangCode();\\r\\n        }\\r\\n       
    if (this.textContents_ko)\\r\\n            this.textContents_ko = this.LoadLanguageData(this.lang_ko);\\r\\n       
    if (this.textContents_en)\\r\\n            this.textContents_en = this.LoadLanguageData(this.lang_en);\\r\\n   
    }\\r\\n    LoadLanguageData(textAsset) {\\r\\n        const textContents = new
    Map();\\r\\n        const lines = textAsset.text.split('\\\\n'); // split the
    CSV file by row\\r\\n        for (let i = 0; i < lines.length; i++) {\\r\\n           
    const line = lines[i].trim().replace('\\\\r', ''); // Remove any leading/trailing
    whitespace and '\\\\r' characters\\r\\n            // Custom CSV parsing logic\\r\\n           
    const values = [];\\r\\n            let currentValue = '';\\r\\n            let
    withinQuotes = false;\\r\\n            for (let j = 0; j < line.length; j++)
    {\\r\\n                const char = line[j];\\r\\n                if (char ===
    '\\\"') {\\r\\n                    withinQuotes = !withinQuotes;\\r\\n               
    }\\r\\n                else if (char === ',' && !withinQuotes) {\\r\\n                   
    values.push(currentValue.trim());\\r\\n                    currentValue = '';\\r\\n               
    }\\r\\n                else if (char === '\\\\\\\\') {\\r\\n                   
    currentValue += \\\"\\\\n\\\";\\r\\n                }\\r\\n                else
    {\\r\\n                    currentValue += char;\\r\\n                }\\r\\n           
    }\\r\\n            values.push(currentValue.trim());\\r\\n            // do something
    with the values\\r\\n            const key = values[0];\\r\\n            const
    contents = values[1];\\r\\n            textContents.set(key, contents);\\r\\n       
    }\\r\\n        return textContents;\\r\\n    }\\r\\n    SetAreaLangCode() {\\r\\n       
    // \uC0AC\uC6A9\uC790\uC758 \uC9C0\uC5ED \uC815\uBCF4 \uAC00\uC838\uC624\uAE30\\r\\n       
    if (UnityEngine_1.Application.systemLanguage == UnityEngine_1.SystemLanguage.Korean)
    {\\r\\n            this.langCode = \\\"ko\\\"; // \uC0AC\uC6A9\uC790\uAC00 \uD55C\uAD6D\uC5B4\uB97C
    \uC0AC\uC6A9\uD558\uB294 \uACBD\uC6B0\\r\\n        }\\r\\n        else {\\r\\n           
    this.langCode = \\\"en\\\"; // \uAE30\uBCF8 \uC5B8\uC5B4 \uC124\uC815 (\uC601\uC5B4)\\r\\n       
    }\\r\\n        UnityEngine_1.PlayerPrefs.SetString(\\\"Language\\\", this.langCode);\\r\\n   
    }\\r\\n    SetLangCode(langCode) {\\r\\n        this.langCode = langCode;\\r\\n       
    UnityEngine_1.PlayerPrefs.SetString(\\\"Language\\\", this.langCode);\\r\\n   
    }\\r\\n    GetLangCode() {\\r\\n        return this.langCode;\\r\\n    }\\r\\n   
    GetCurrentLanguageData(key) {\\r\\n        switch (this.langCode) {\\r\\n           
    case \\\"ko\\\":\\r\\n                return this.textContents_ko?.get(key);\\r\\n           
    case \\\"en\\\":\\r\\n                return this.textContents_en?.get(key);\\r\\n           
    default:\\r\\n                // console.log(\\\"langCode error\\\");\\r\\n               
    return null;\\r\\n        }\\r\\n    }\\r\\n    // ----------- Language -------------\\r\\n   
    // ----------- Card -------------\\r\\n    LoadCardData() {\\r\\n        const
    lines = this.cardFile.text.split('\\\\n'); // split the CSV file by row\\r\\n       
    for (let i = 0; i < lines.length; i++) {\\r\\n            const line = lines[i].trim().replace('\\\\r',
    ''); // Remove any leading/trailing whitespace and '\\\\r' characters\\r\\n           
    const values = line.split(','); // split the row by comma to get the values\\r\\n           
    // do something with the values\\r\\n            const cardData = new CardData_1.default();\\r\\n           
    const cardId = values[1];\\r\\n            cardData.SetCardData(cardId, +values[2],
    values[3], values[4], +values[5], +values[6], +values[7], +values[8]);\\r\\n           
    this.cardDatas.set(cardId, cardData);\\r\\n            const cardQuantity = this.GetValue(cardId);\\r\\n           
    // console.log(\\\"ID: \\\" + cardId, \\\" Quantity: \\\" + cardQuantity);\\r\\n           
    this.SetValue(cardId, cardQuantity);\\r\\n            this.inventoryCache.set(cardId,
    cardQuantity);\\r\\n        }\\r\\n    }\\r\\n    GetCardData(id) {\\r\\n       
    return this.cardDatas.get(id);\\r\\n    }\\r\\n    GetCardQuantity(id) {\\r\\n       
    return this.inventoryCache.get(id) || 0;\\r\\n    }\\r\\n    GetRandomCardByGrade(grade)
    {\\r\\n        // \uB4F1\uAE09\uC5D0 \uB9DE\uB294 \uCE74\uB4DC \uBAA9\uB85D \uAC00\uC838\uC624\uAE30\\r\\n       
    const cardsByGrade = Array.from(this.cardDatas.values()).filter(cardData => cardData.GetGrade()
    === grade.toLowerCase());\\r\\n        // \uB79C\uB364 \uCE74\uB4DC \uC120\uD0DD\\r\\n       
    if (cardsByGrade.length > 0) {\\r\\n            const randomIndex = Math.floor(Math.random()
    * cardsByGrade.length);\\r\\n            return cardsByGrade[randomIndex];\\r\\n       
    }\\r\\n        else {\\r\\n            // console.log(\\\"GetRandomCardByGrade:
    undefined\\\");\\r\\n            return undefined;\\r\\n        }\\r\\n    }\\r\\n   
    // Adds a given quantity of cards with a given ID to the inventory.\\r\\n   
    AddCard(id, quantity = 1) {\\r\\n        const currentQuantity = this.inventoryCache.get(id)
    || 0;\\r\\n        const newQuantity = currentQuantity + quantity;\\r\\n       
    this.inventoryCache.set(id, newQuantity);\\r\\n        this.SetValue(id, newQuantity);\\r\\n   
    }\\r\\n    // Uses a given quantity of cards with a given ID from the inventory.\\r\\n   
    // Returns true if the operation is successful, false otherwise.\\r\\n    UseCard(id,
    quantity = 1) {\\r\\n        const currentQuantity = this.inventoryCache.get(id)
    || 0;\\r\\n        // If the ID is in the inventory and the current quantity
    is greater than the given quantity,\\r\\n        // the given quantity is subtracted
    from the current quantity and the new quantity is saved to PlayerPrefs.\\r\\n       
    if (currentQuantity >= quantity) {\\r\\n            const newQuantity = currentQuantity
    - quantity;\\r\\n            this.inventoryCache.set(id, newQuantity);\\r\\n           
    this.SetValue(id, newQuantity);\\r\\n            return true;\\r\\n        }\\r\\n       
    else {\\r\\n            // console.log(`Not enough ${id} to use.`);\\r\\n           
    return false;\\r\\n        }\\r\\n    }\\r\\n    GetGradeNumberByString(grade)
    {\\r\\n        switch (grade.toLowerCase()) {\\r\\n            case \\\"d\\\":\\r\\n               
    return Grade.D;\\r\\n            case \\\"c\\\":\\r\\n                return
    Grade.C;\\r\\n            case \\\"b\\\":\\r\\n                return Grade.B;\\r\\n           
    case \\\"a\\\":\\r\\n                return Grade.A;\\r\\n            case \\\"s\\\":\\r\\n               
    return Grade.S;\\r\\n            default:\\r\\n                return Grade.D;\\r\\n       
    }\\r\\n    }\\r\\n    GetGradeIconByGrade(grade) {\\r\\n        const index =
    this.GetGradeNumberByString(grade);\\r\\n        console.log(index);\\r\\n       
    return this.gradeIcons[index];\\r\\n    }\\r\\n    GetCardBackgroundSpriteByGrade(grade)
    {\\r\\n        const index = this.GetGradeNumberByString(grade);\\r\\n       
    return this.cardBackgroundSprites[index];\\r\\n    }\\r\\n    GetCardFrameByGrade(grade)
    {\\r\\n        const index = this.GetGradeNumberByString(grade);\\r\\n       
    return this.cardFrameSprites[index];\\r\\n    }\\r\\n    // ----------- Card
    -------------\\r\\n    GetInventoryCache() {\\r\\n        return this.inventoryCache;\\r\\n   
    }\\r\\n    GetRandomStageReceipt() {\\r\\n        const index = Math.floor(UnityEngine_1.Random.Range(0,
    this.stageReceipts.length));\\r\\n        return this.stageReceipts[index];\\r\\n   
    }\\r\\n    GetReceipt(index) {\\r\\n        return this.receipts[index];\\r\\n   
    }\\r\\n    getProductSprite(product) {\\r\\n        // split ingredients, drink,
    side\\r\\n        if (product <= Ingredient.END)\\r\\n            return this.getIngredientSprite(product);\\r\\n       
    else if (product <= Drink.END)\\r\\n            return this.getDrinkSprite(product);\\r\\n       
    else\\r\\n            return this.getSideSprite(product);\\r\\n    }\\r\\n   
    // Return sprite of the ingredient\\r\\n    getIngredientSprite(ingredient) {\\r\\n       
    return this.ingredientSprites[ingredient - Ingredient.START];\\r\\n    }\\r\\n   
    getDrinkSprite(drinkName) {\\r\\n        return this.drinkSprites[drinkName -
    Drink.START];\\r\\n    }\\r\\n    // Return sprite of the side\\r\\n    getSideSprite(sideName)
    {\\r\\n        return this.sideSprites[sideName - Side.START];\\r\\n    }\\r\\n   
    // Return sprite of the character\\r\\n    GetCharacterSprite(character) {\\r\\n       
    return this.characterSprites[character - Character.START];\\r\\n    }\\r\\n   
    // Return sprite of the character\\r\\n    GetCharacterCardSprite(character)
    {\\r\\n        return this.characterCardSprites[character - Character.START];\\r\\n   
    }\\r\\n    GetCharacterIcon(character) {\\r\\n        return this.characterIcons[character
    - Character.START];\\r\\n    }\\r\\n    GetCharacterSpriteByName(characterName)
    {\\r\\n        const spriteIndex = this.characterSprites.findIndex((s) => s.name.split('_')[1].toLowerCase()
    === characterName);\\r\\n        return this.characterSprites[spriteIndex];\\r\\n   
    }\\r\\n    GetSectionSpriteByName(sectionName) {\\r\\n        const spriteIndex
    = this.sectionSprites?.findIndex((s) => s.name.toLowerCase() === sectionName);\\r\\n       
    return this.sectionSprites[spriteIndex];\\r\\n    }\\r\\n    GetUnlockStageByName(name)
    {\\r\\n        const unlockStage = this.unlockStages?.get(name);\\r\\n       
    return unlockStage;\\r\\n    }\\r\\n    GetIsUnlockByName(name) {\\r\\n       
    const unlockStage = this.unlockStages?.get(name);\\r\\n        return this.lastSavedStage
    >= unlockStage;\\r\\n    }\\r\\n    CheckUnlockByStage(stage) {\\r\\n       
    for (const [key, value] of this.unlockStages) {\\r\\n            if (value ===
    stage) {\\r\\n                return key;\\r\\n            }\\r\\n        }\\r\\n       
    return undefined;\\r\\n    }\\r\\n    GetSectionSprites() {\\r\\n        return
    this.sectionSprites;\\r\\n    }\\r\\n}\\r\\nexports.default = DataManager;\\r\\n//#
    sourceMappingURL=data:application/json;base64,\",\"assetPath\":\"Assets/Scripts/DataManager.ts\",\"manifest\":{\"properties\":[{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"receiptFile\",\"type\":\"UnityEngine.TextAsset\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"costFile\",\"type\":\"UnityEngine.TextAsset\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"stageFile\",\"type\":\"UnityEngine.TextAsset\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"unlockStageFile\",\"type\":\"UnityEngine.TextAsset\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"cardFile\",\"type\":\"UnityEngine.TextAsset\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"lang_ko\",\"type\":\"UnityEngine.TextAsset\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"lang_en\",\"type\":\"UnityEngine.TextAsset\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"ingredientSprites\",\"type\":\"UnityEngine.Sprite[]\",\"isArray\":true,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"drinkSprites\",\"type\":\"UnityEngine.Sprite[]\",\"isArray\":true,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"sideSprites\",\"type\":\"UnityEngine.Sprite[]\",\"isArray\":true,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"characterSprites\",\"type\":\"UnityEngine.Sprite[]\",\"isArray\":true,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"characterCardSprites\",\"type\":\"UnityEngine.Sprite[]\",\"isArray\":true,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"characterIcons\",\"type\":\"UnityEngine.Sprite[]\",\"isArray\":true,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"gradeIcons\",\"type\":\"UnityEngine.Sprite[]\",\"isArray\":true,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"cardBackgroundSprites\",\"type\":\"UnityEngine.Sprite[]\",\"isArray\":true,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"cardFrameSprites\",\"type\":\"UnityEngine.Sprite[]\",\"isArray\":true,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"sectionSprites\",\"type\":\"UnityEngine.Sprite[]\",\"isArray\":true,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]}],\"name\":\"DataManager\",\"description\":\"\"},\"isCompiled\":true}"
  typescriptHash: 344a4dd869142a090d7ea1bc9a52f45e
  onlyWriteTrigger: 0
