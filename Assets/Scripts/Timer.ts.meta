fileFormatVersion: 2
guid: f6276c36d5a45fb4aab1bd2a88d20c79
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nclass Timer extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super();\r\n        this.secondsPerMinute
    = 60;\r\n        this.secondsPerHour = 60 * this.secondsPerMinute;\r\n       
    this.secondsPerDay = 24 * this.secondsPerHour;\r\n        this.elapsedTime =
    0;\r\n        this.InitTime();\r\n    }\r\n    // Update the time based on the
    elapsed time\r\n    UpdateTime() {\r\n        this.elapsedTime += UnityEngine_1.Time.deltaTime
    * this.timeScale;\r\n        let seconds = Math.floor(this.elapsedTime);\r\n       
    this.Day = Math.floor(seconds / this.secondsPerDay);\r\n        seconds -= this.Day
    * this.secondsPerDay;\r\n        this.Hour = Math.floor(seconds / this.secondsPerHour);\r\n       
    seconds -= this.Hour * this.secondsPerHour;\r\n        this.Minute = Math.floor(seconds
    / this.secondsPerMinute);\r\n        seconds -= this.Minute * this.secondsPerMinute;\r\n       
    this.Second = seconds;\r\n    }\r\n    // Set the time scale based on the number
    of minutes per day\r\n    SetTimeScale(minutesPerDay) {\r\n        this.timeScale
    = 24 * 60 / minutesPerDay; // 24 * 60 (1 minute per day) / n minutes per day\r\n   
    }\r\n    // Set the time to the specified hour and minute\r\n    SetTime(hour,
    minute) {\r\n        this.elapsedTime = hour * this.secondsPerHour + minute *
    this.secondsPerMinute;\r\n    }\r\n    // Initialize the time information\r\n   
    InitTime() {\r\n        this.elapsedTime = 0;\r\n    }\r\n    // Get the current
    hour\r\n    GetHour() {\r\n        return this.Hour;\r\n    }\r\n    // Get the
    current minute\r\n    GetMinute() {\r\n        return this.Minute;\r\n    }\r\n}\r\nexports.default
    = Timer;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGltZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJUaW1lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLGlEQUFxRDtBQUVyRCw2Q0FBMEM7QUFHMUMsTUFBcUIsS0FBTSxTQUFRLHFDQUFxQjtJQWNwRDtRQUNJLEtBQUssRUFBRSxDQUFDO1FBUEoscUJBQWdCLEdBQVcsRUFBRSxDQUFDO1FBQzlCLG1CQUFjLEdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztRQUNwRCxrQkFBYSxHQUFXLEVBQUUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBRWpELGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBSTVCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQsNENBQTRDO0lBQzVDLFVBQVU7UUFDTixJQUFJLENBQUMsV0FBVyxJQUFJLGtCQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDcEQsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFM0MsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDcEQsT0FBTyxJQUFJLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUV6QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN0RCxPQUFPLElBQUksSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBRTNDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDMUQsT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDO1FBRS9DLElBQUksQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDO0lBQzFCLENBQUM7SUFFRCw0REFBNEQ7SUFDNUQsWUFBWSxDQUFDLGFBQXFCO1FBQzlCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxhQUFhLENBQUMsQ0FBQyxpREFBaUQ7SUFDL0YsQ0FBQztJQUVELGdEQUFnRDtJQUNoRCxPQUFPLENBQUMsSUFBWSxFQUFFLE1BQWM7UUFDaEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLGNBQWMsR0FBRyxNQUFNLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDO0lBQ25GLENBQUM7SUFFRCxrQ0FBa0M7SUFDbEMsUUFBUTtRQUNKLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRCx1QkFBdUI7SUFDdkIsT0FBTztRQUNILE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDO0lBRUQseUJBQXlCO0lBQ3pCLFNBQVM7UUFDTCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkIsQ0FBQztDQUNKO0FBNURELHdCQTREQyJ9","assetPath":"Assets/Scripts/Timer.ts","manifest":{"properties":[{"assembly":"mscorlib","name":"Day","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"Hour","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"Minute","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"Second","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"Timer","description":""},"isCompiled":true}'
  typescriptHash: 5317954f9a737516659862f381ce94ec
  onlyWriteTrigger: 0
